{"version":3,"sources":["util.js","knowledge/modelapp.ts","loader/mapsToGraph.ts","loader/dataToMaps.js","components/ChampionList.tsx","components/SynergyList.tsx","components/ChampionImages.tsx","components/GridChart.tsx","Ariandel.tsx","serviceWorker.js","index.js","knowledge/modeldata.ts"],"names":["objFromAry","key","ary","reduce","obj","el","pickStateVars","R","mapToReactVisForce","id","objs","maps","nodeProps","linkProps","nodes","map","o","props","node","radius","className","cx","labelClass","fill","concat","replace","hist","links","sLinks","hLinks","forEach","Object","entries","_ref","_ref2","slicedToArray","synergy","objMaps","values","i","length","src","source","j","tgt","target","lProps","rvfLink","link","value","__unsafe_lProps","highlighted","selected","push","jsonToMaps","keys","jsonObjs","val","m","k","objectSpread","defineProperty","ChampionList","title","champions","onClick","handleOnClick","event","championId","textContent","renderChampions","c","react_default","a","createElement","name","SynergyList","synThreshes","renderThresholds","threshes","_ref3","count","threshStr","Math","abs","ChampionImages","Fragment","patternUnits","width","height","x","y","href","icon","GridChartHtml","operator","_props$showLabels","showLabels","_props$vertSpace","vertSpace","_props$horiSpace","horiSpace","_props$vertGutter","vertGutter","_props$horiGutter","horiGutter","_props$topX","topX","_props$bottomX","bottomX","_props$leftY","leftY","_props$rightY","rightY","_props$nodeStyle","nodeStyle","_props$labelStyle","labelStyle","_props$chartStyle","chartStyle","_props$textVertMargin","textVertMargin","baseLabelStyle","renderGridNode","bottom","baseNodestyle","baseChartStyle","gridAutoColumns","gridAutoRows","gridColumnGap","gridRowGap","renderLabel","style","label","renderData","data","xAxisNodes","rowPos","gridColumn","gridRow","element","yAxisNodes","colPos","resultsNodes","flatMap","yNode","xNode","rNode","ramda","window","championData","championModule","synergyData","synergyModule","itemData","itemModule","keyToSynergy","mapObjIndexed","posThreshMap","pickBy","isKeyPositive","negThreshMap","isKeyNegative","getThresholdStr","curry","synergyThreshold","toPairs","idToItem","item","usedIn","madeFrom","items","basicItems","filter","recipe","nonBasicItems","idToNonBasicItem","recipeToNonBasicItem","mergeWith","merge","reduceBy","groupBy","makeGridNodeFromItem","short","effect","unused","itemName","toConsumableArray","gridAxisNodes","idToResultsGridNode","combineItems","itemA","itemB","exactThreshMap","sortedThresh","reduceWhile","acc","thresh","lte","Number","reduceToPicks","hovered","setChampionData","t","_useState","useState","_useState2","filtered","setFiltered","_useState3","_useState4","setSelected","_useState5","_useState6","grouped","setGrouped","_useState7","_useState8","setHighlighted","_useState9","_useState10","setHovered","useAppState","idToChampion","keyToMap","tierToMap","picks","isLeaf","isChampion","LabeledCheckbox","checked","onChange","_ref$children","children","type","htmlFor","renderMapAsCheckboxes","depth","arguments","undefined","_Object$entries$reduc","v","render","e","_renderMapAsCheckboxe","_e$target","walkLeaves","cb","tree","child","champion","join","ItemReferenceModal","_React$useState","React","_React$useState2","open","setOpen","renderChart","lib_default","isOpen","onRequestClose","content","left","right","padding","transform","border","ariaHideApp","renderKeysAsCheckboxes","hidden","setHidden","checkboxes","_ref4","_ref5","_renderMapAsCheckboxe2","is","filterNull","identity","evalChampionThresholds","_ref6","_ref7","synergyMap","synergies","synergyCountMap","countBy","mapCountsToThresholds","_ref8","_ref9","synName","synCount","foundThresh","extractSynergyThresholds","keySyns","pick","uniq","unnest","_ref10","_ref11","vs","path","linkDisplayRules","b","Ariandel","start","Date","now","_setChampionData","hoveredChampion","toggleSelectChampion","setChampionHighlight","bool","sourceC","uniqBy","syn","_mapToReactVisForce","console","log","react_vis_force","zoom","zoomOptions","maxScale","minScale","simulationOptions","radiusMargin","alphaDecay","innerHeight","innerWidth","forceNode","assign","cloneElement","onMouseDown","onMouseOver","onMouseOut","forceLink","Boolean","location","hostname","match","ReactDOM","src_Ariandel","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","__webpack_require__","d","__webpack_exports__","classstrs","originstrs","datatype","class","origin","iconSrc","exports"],"mappings":"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","file":"static/js/main.53cf48a2.chunk.js","sourcesContent":["// no conflicting keys\nexport function objFromAry(key, ary) {\n  return ary.reduce((obj, el) => {\n    obj[el[key]] = el;\n    return obj;\n  }, {});\n}\n","import * as R from 'ramda';\nimport { useState } from 'react';\n\nimport { Item } from './modeldata';\n\n// State handling in app\ninterface StateVars {\n  filtered: boolean;\n  selected: boolean;\n  grouped: boolean;\n  highlighted: boolean;\n  hovered: boolean;\n}\ninterface StateSets {\n  setFiltered: (boolean) => void;\n  setSelected: (boolean) => void;\n  setGrouped: (boolean) => void;\n  setHighlighted: (boolean) => void;\n  setHovered: (boolean) => void;\n}\n// Stateful properites of for interactable objects\nexport type State = StateVars & StateSets;\n// Attaches State functionality to object\nexport function useAppState<T>(t: T): State & T {\n  const [filtered, setFiltered] = useState(false);\n  const [selected, setSelected] = useState(false);\n  const [grouped, setGrouped] = useState(false);\n  const [highlighted, setHighlighted] = useState(false);\n  const [hovered, setHovered] = useState(false);\n\n  return {\n    ...t,\n    filtered,\n    selected,\n    grouped,\n    highlighted,\n    hovered,\n    setFiltered,\n    setSelected,\n    setGrouped,\n    setHighlighted,\n    setHovered,\n  };\n}\n\n// Picks state props from an object\nexport const pickStateVars: (o: StateVars) => StateVars = R.pick([\n  'filtered',\n  'selected',\n  'grouped',\n  'highlighted',\n  'hovered',\n]);\n\nexport const mergeStateVars = (a: StateVars, b: StateVars): StateVars => ({\n  filtered: a.filtered && b.filtered,\n  selected: a.selected && b.selected,\n  grouped: a.grouped && b.grouped,\n  highlighted: a.highlighted && b.highlighted,\n  hovered: a.hovered && b.hovered,\n});\n\n\n// TODO: move somewhere because these are data+app convenience types\n// Synergy handling in app\nexport type Threshold = [number, string];\n\nexport interface SynergyThreshold {\n  name: string;\n  threshes: Threshold[];\n}\n\n// Adds stuff to synergy to make it easier to use\nexport interface SynergyEnrichment extends SynergyThreshold {\n  getThresholdStr: (n: number) => Threshold | null;\n}\n\nexport interface ItemEnrichment<T extends Item> {\n  usedIn: T[]; // the items this item is in recipes for\n  madeFrom: T[]; // the items this item is made from\n}\n","import cx from 'classnames/bind';\nimport * as R from 'ramda';\n\n// if false, then hide. if true, then filter\nconst hideFilter = false;\n\n/// EXPORT to react-vis-force\ntype HexColor = string;\ninterface RVF_ForceNode {\n  node: RVF_Node;\n  cx?: number;\n  cy?: number;\n  r?: number;\n  className?: string;\n  labelClass?: string;\n  fill?: HexColor|string;\n  opacity?: number; // 0 - 1\n  stroke?: HexColor|string;\n  strokeWidth?: number; // in pixels\n  onMouseDown?: (e: MouseEvent) => void;\n  onMouseOver?: (e: MouseEvent) => void;\n  onMouseOut?: (e: MouseEvent) => void;\n}\ninterface RVF_ForceLink {\n  link: RVF_Link,\n  edgeOffset?: number;\n  strokeWidth?: number;\n  className?: string;\n  opacity?: number;\n  stroke?: HexColor;\n  pathLength?: number;\n  onMouseDown?: (e: MouseEvent) => void;\n  onMouseOver?: (e: MouseEvent) => void;\n  onMouseOut?: (e: MouseEvent) => void;\n}\ninterface RVF_Node {\n  id: string;\n  radius?: number;\n}\ninterface RVF_Link {\n  source: string;\n  target: string;\n  value?: number;\n}\ntype Identifiable<S extends string, T = {}> = Record<S, string> & T & {icon: string};\n/**\n * @param id       parameter that exists in T\n * @param objs     List of objects\n * @param maps.....Maps mappings of \"Keys\" to objects (TODO: deprecate in\n *                 favor of extracting this information from objs)\n * @param nodeProps Function that extracts properties from a T object\n * @param linkPRops Function that extracts properties from 2 T objects\n */\ntype mapToReactVisForce =\n  <S extends string, T, U extends Identifiable<S, T>> (\n    id: S,\n    objs: U[],\n    maps,\n    nodeProps: (o: T) => object,\n    linkProps: (a: T, b: T) => object,\n  ) => { nodes: RVF_ForceNode[], links: RVF_ForceLink[] };\nexport const mapToReactVisForce: mapToReactVisForce = (id, objs, maps, nodeProps, linkProps) => {\n  // creates nodes\n  const nodes: RVF_ForceNode[] = objs.map(o => {\n    const props = nodeProps(o);\n    const rvfNode = {\n      node: {\n        id: o[id],\n        radius: 12,\n      },\n      className: cx('graph-node', props),\n      labelClass: cx('node-label', props),\n      fill: `url(#${o[id].replace(/[' ]/g,'')}-img)`,\n      // fill: `url(${o.icon})`,\n      // fill: 'url(#myGradient)',\n    };\n    return rvfNode;\n  });\n\n // creates links\n  const hist = {}; // (hist)ory of links made\n  // the extra arrays are to influence draw order\n  const links: RVF_ForceLink[] = [];\n  const sLinks: RVF_ForceLink[] = [];\n  const hLinks: RVF_ForceLink[] = [];\n  maps.forEach(map => {\n    Object.entries(map).forEach(([synergy, objMaps]) => {\n      // TODO, this is clearly bad, should instead find and hide links between\n      // synergies with only a thresh of 1\n      if (synergy === \"Avatar\") {\n        return;\n      }\n      const objs = Object.values(objMaps);\n      for (let i = 0; i < objs.length - 1; i++) {\n        const src = objs[i];\n        const source: string = src[id];\n        if (!hist[source]) {\n          hist[source] = {};\n        }\n        for (let j = i + 1; j < objs.length; j++) {\n          const tgt = objs[j];\n          const target: string = tgt[id];\n          if (hist[source][target]) continue; // drop dup links\n\n          const lProps = linkProps(src, tgt);\n          const rvfLink: RVF_ForceLink = {\n            link: { source, target, value: 4 },\n            className: cx('graph-link', lProps),\n          };\n\n          // TODO, shouldnt expose highlight and selected\n          const __unsafe_lProps = lProps as any;\n          const linksPtr =\n            __unsafe_lProps.highlighted ? hLinks :\n              __unsafe_lProps.selected ? sLinks : links;\n\n          linksPtr.push(rvfLink);\n          hist[source][target] = rvfLink; // record link\n        }\n      }\n    });\n  });\n\n  return { nodes, links: links.concat(sLinks).concat(hLinks) };\n}\n\n/// EXPORT TO vx/network\nexport function mapToVxNetwork() {\n\n}\n\n\n/// EXPORT TO react-d3-graph\nfunction setNodeAsSelected(node) {\n  node.color = 'lightgreen';\n  // node.strokeColor = 'forestgreen';\n  node.highlightStrokeColor = 'forestgreen';\n  node.fontSize = 20;\n  node.highlightFontSize = 40;\n}\n\nexport function mapToReactD3Graph(id, objs, allObjMap, maps) {\n  let nodes;\n  if (hideFilter) {\n    nodes = objs.filter(o => o.active)\n  }\n  nodes = nodes.map(o => {\n    const node = {\n      ...o,\n      id: o[id],\n      opacity: o.active ? 1 : 0.3,\n    };\n    if (o.selected) {\n      setNodeAsSelected(node);\n    }\n    return node;\n  });\n\n  const hist = {};\n\n  const links = maps.reduce((lks, map) => {\n    Object.values(map).forEach(objMaps => {\n      const objs = Object.values(objMaps);\n      for (let i = 0; i < objs.length - 1; i++) {\n        const source = objs[i][id];\n        if (!hist[source]) {\n          hist[source] = {};\n        }\n        for (let j = i + 1; j < objs.length; j++) {\n          const target = objs[j][id];\n          if (hist[source][target]) continue;\n          const link = { source, target, opacity: 1 };\n          if (!allObjMap[target].active || !allObjMap[source].active) {\n            if (hideFilter) {\n              continue;\n            }\n            link.opacity = 0.3;\n          }\n          lks.push(link);\n          hist[source][target] = link;\n        }\n      }\n    });\n    return lks;\n  }, []);\n\n  if (nodes.length === 0) {\n    nodes.push({id: '???'});\n  }\n\n  return { nodes, links };\n}\n","// maps of json objs by key\n// todo rename to group by key\nexport function jsonToMaps(id, keys, jsonObjs) {\n  return jsonObjs.reduce((maps, obj) => {\n    keys.forEach(key => {\n      [].concat(obj[key]).forEach(val => {\n        if (!maps[key][val]) {\n          maps[key][val] = {};\n        }\n        maps[key][val][obj[id]] = obj;\n      });\n    });\n    return maps;\n  }, keys.reduce((m, k) => ({ ...m, [k]: {} }), {}));\n}\n","import React from 'react';\nimport cx from 'classnames/bind';\n\nimport { Champion } from '../knowledge/modeldata';\n\ninterface ChampionListProps {\n  title: string;\n  className?: string;\n  champions: Champion[];\n  onClick?: (championName: string) => void;\n}\n\n// Component that shows list of champions\nexport function ChampionList(props: ChampionListProps) {\n  const {title, className, champions, onClick} = props;\n\n  function handleOnClick(event: React.MouseEvent<HTMLDivElement>) {\n    const target = event.target as HTMLDivElement;\n    const championId = target.textContent;\n    onClick && onClick(championId);\n  }\n\n  const renderChampions = champions.map(c => (\n    <div key={c.name} className=\"champion\" onClick={handleOnClick}>\n      {c.name}\n    </div>\n  ));\n  return (\n    <div className={cx('champion-list', className)}>\n      <div className=\"title\">{title} ({champions.length})</div>\n      <div className=\"champions\">{renderChampions}</div>\n    </div>\n  )\n}\n","import React from 'react';\nimport cx from 'classnames/bind';\n\nimport { SynergyThreshold } from '../knowledge/modelapp';\n\ninterface SynergyListProps {\n  title: string;\n  className?: string;\n  synThreshes: SynergyThreshold[];\n}\n\nexport function SynergyList(props: SynergyListProps) {\n  const {synThreshes, title, className} = props;\n  const renderThresholds = synThreshes.map(({name, threshes}) => (\n    <div key={name} className=\"synergy\">\n      <div className=\"name\">{name}</div>\n      {threshes.map(([count, threshStr]) => (\n        <div key={threshStr} className=\"flex\">\n          <div className=\"threshold\">{Math.abs(count)}</div>\n          <div className=\"synergy-detail\">{threshStr}</div>\n        </div>\n      ))}\n    </div>\n  ));\n\n  return (\n    <div className={cx('synergy-list', className)}>\n      <div className=\"title\">{title}</div>\n      <div className=\"synergies\">{renderThresholds}</div>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport { Champion } from '../knowledge/modeldata';\n\ninterface ChampionImagesProps {\n  champions: Champion[];\n}\n\n// helper component for svg\nexport function ChampionImages(props: ChampionImagesProps) {\n  const {champions} = props;\n  return (\n    <>\n      {champions.map(c => (\n        <pattern\n          key={c.name}\n          id={c.name.replace(/[' ]/g,'')+'-img'}\n          patternUnits=\"objectBoundingBox\"\n          width=\"1\"\n          height=\"1\"\n          x=\"0\"\n          y=\"0\"\n        >\n          <image\n            className=\"node-icon\"\n            href={c.icon}\n            x=\"0\"\n            y=\"0\"\n          />\n        </pattern>\n      ))}\n    </>\n  );\n}\n","import React, {cloneElement} from 'react';\nimport cx from 'classnames/bind';\n\nexport interface GridNode {\n  id: string;\n  element?: SVGElement;\n  data?: string;\n  label?: string;\n}\ninterface GridChartProps {\n  id?: string;\n  className?: string;\n  height?: number;\n  width?: number;\n  x: GridNode[];\n  y: GridNode[];\n  operator: (x: GridNode, y: GridNode) => GridNode|undefined;\n  vertSpace?: number; // doesn't support % yet\n  horiSpace?: number; // doesn't support % yet\n  vertGutter?: number;\n  horiGutter?: number;\n  topX?: boolean;\n  bottomX?: boolean;\n  leftY?: boolean;\n  rightY?: boolean;\n  showLabels?: boolean;\n  labelClass?: string;\n  textVertMargin?: number;\n  renderGridNode?: (n: GridNode) => React.ReactElement;\n}\n\ninterface GridChartHtmlProps extends GridChartProps {\n  nodeStyle?: React.CSSProperties;\n  labelStyle?: React.CSSProperties;\n  chartStyle?: React.CSSProperties;\n}\n\nexport function GridChartHtml(props: GridChartHtmlProps) {\n  const {\n    id,\n    className,\n    x,\n    y,\n    operator,\n    showLabels = false,\n    labelClass,\n    vertSpace = 40,\n    horiSpace = 50,\n    vertGutter = 10,\n    horiGutter = vertGutter,\n    topX = true,\n    bottomX = false, // doesnt work right now\n    leftY = true,\n    rightY = false, // doesnt work right now\n    nodeStyle = {},\n    labelStyle = {},\n    chartStyle = {},\n    textVertMargin = -21, // for alignment of line height\n    renderGridNode,\n  } = props;\n\n  const baseLabelStyle = {\n    bottom: textVertMargin,\n    ...labelStyle,\n  } as React.CSSProperties;\n\n  const baseNodestyle = {\n    ...nodeStyle,\n  } as React.CSSProperties;\n\n  const baseChartStyle = {\n    gridAutoColumns: horiSpace,\n    gridAutoRows: vertSpace,\n    gridColumnGap: horiGutter,\n    gridRowGap: vertGutter,\n    ...chartStyle,\n  } as React.CSSProperties;\n\n  const renderLabel = (node: GridNode) => (\n    <span className={cx('node-label', labelClass)} style={baseLabelStyle}>\n      {node.label || node.id}\n    </span>\n  );\n\n  const renderData = (node: GridNode) => (\n     node.data && <div className=\"node-data\">{node.data}</div>\n  );\n\n  const xAxisNodes = (rowPos) => x.map((node, i) => {\n    const gridColumn = `${i + 2} / ${i + 3}`;\n    const gridRow = `${rowPos} / ${rowPos + 1}`;\n    return (\n      <div\n        key={node.id + '_x'}\n        className=\"grid-node x-axis-node\"\n        style={{gridColumn, gridRow, ...baseNodestyle}}\n      >\n        {node.element || renderData(node)}\n        {showLabels && renderLabel(node)}\n      </div>\n    );\n  });\n\n  const yAxisNodes = (colPos) => y.map((node, j) => {\n    const gridColumn = `${colPos} / ${colPos + 1}`;\n    const gridRow = `${j + 2} / ${j + 3}`;\n    return (\n      <div\n        key={node.id + '_Y'}\n        className=\"grid-node y-axis-node\"\n        style={{gridColumn, gridRow, ...baseNodestyle}}\n      >\n        {node.element || renderData(node)}\n        {showLabels && renderLabel(node)}\n      </div>\n    );\n  });\n\n  const resultsNodes = y.flatMap((yNode, j) => x.map((xNode, i) => {\n    const rNode = operator(xNode, yNode);\n    return (\n      <div\n        key={`${rNode.id}_${i}_${j}`}\n        className=\"grid-node result-node\"\n        style={baseNodestyle}\n      >\n        {rNode.element || renderData(rNode)}\n        {showLabels && renderLabel(rNode)}\n      </div>\n    );\n  }));\n\n  return (\n    <div id={id} className={cx('grid-chart', className)} style={baseChartStyle}>\n      {topX && leftY && <div style={{gridColumn: '1 / 2', gridRow: '1 / 2'}} />}\n      {topX && xAxisNodes(1)}\n      {leftY && yAxisNodes(1)}\n      {bottomX && xAxisNodes(y.length)}\n      {rightY && yAxisNodes(x.length)}\n      {resultsNodes}\n    </div>\n  );\n}\n\n\n/* Example */\n// const rectStyle = {\n//   stroke: '#EEE',\n//   strokeWidth: 2,\n//   fillOpacity: 0,\n//   rx: 5,\n//   ry: 5,\n// };\n\n// const textStyle = {\n//   fill: '#EEE',\n// };\n\n// const renderChart = (\n//   <GridChartSvg\n//     x={gridAxisNodes}\n//     y={gridAxisNodes}\n//     vertSpace={40}\n//     horiSpace={100}\n//     vertGutter={16}\n//     horiGutter={10}\n//     operator={combineItems}\n//     showLabels\n//     labelClass={\"grid-labels\"}\n//     rectStyle={rectStyle}\n//     textStyle={textStyle}\n//   />\n// );\ninterface GridChartSvgProps extends GridChartProps {\n  rectStyle?: React.SVGAttributes<SVGRectElement>;\n  textStyle?: React.SVGAttributes<SVGTextElement>;\n}\n/**\n * Cant use SVG because SVG sucks\n */\nexport function GridChartSvg(props: GridChartSvgProps) {\n  const {\n    id,\n    className,\n    x,\n    y,\n    operator,\n    showLabels = false,\n    labelClass,\n    vertSpace = 40,\n    horiSpace = 50,\n    vertGutter = 10,\n    horiGutter = vertGutter,\n    topX = true,\n    bottomX = false,\n    leftY = true,\n    rightY = false,\n    rectStyle = {strokeWidth: 0},\n    textStyle = {},\n    textVertMargin = -5, // for alignment of line height\n    renderGridNode,\n  } = props;\n\n  const {\n    height = (y.length + 1) * (vertSpace + vertGutter) - (showLabels ? 0 : vertGutter),\n    width = (x.length + 1) * (horiSpace + horiGutter) - horiGutter,\n  } = props;\n\n  const horiOuter = horiSpace + horiGutter;\n  const vertOuter = vertSpace + vertGutter;\n\n  const Node = (props) => {\n    return (\n    <>\n      <rect {...props} />\n      {cloneElement(props.children, {\n        x: props.x,\n        y: props.y,\n      })}\n    </>\n  )};\n\n  const xAxisNodes = (yPos) => x.map((node, i) => (\n    <Node\n      key={node.id + '_x'}\n      x={(i + 1) * horiOuter}\n      y={yPos}\n      width={horiSpace}\n      height={vertSpace}\n      {...rectStyle}\n    >\n      {node.element\n        || (renderGridNode && renderGridNode(node))\n        || <foreignObject\n            transform={`translate(2, 2)`}\n            fontSize=\"10\"\n            width={horiSpace - 4}\n            height={vertSpace - 4}\n           >\n            <span>{node.data || node.id}</span>\n           </foreignObject>\n      }\n    </Node>\n  ));\n\n  const xAxisLabels = (yPos) => x.map((node, i) => (\n    <text\n      key={node.id + '_x_label'}\n      x={(i + 1) * horiOuter}\n      y={yPos + textVertMargin}\n      className={labelClass}\n      {...textStyle}\n    >\n      {node.label || node.id}\n    </text>\n  ));\n\n  const yAxisNodes = (xPos) => y.map((node, i) => (\n    <rect\n      key={node.id + '_y'}\n      x={xPos}\n      y={(i + 1) * vertOuter}\n      width={horiSpace}\n      height={vertSpace}\n      {...rectStyle}\n    />\n  ));\n\n  const yAxisLabels = (xPos) => x.map((node, i) => (\n    <text\n      key={node.id + '_x_label'}\n      x={xPos}\n      y={(i + 2) * vertOuter + textVertMargin}\n      className={labelClass}\n      {...textStyle}\n    >\n      {node.label || node.id}\n    </text>\n  ));\n\n  const results = y.map(\n    (yNode, j) => x.map(\n      (xNode, i) => {\n        const rNode = operator(xNode, yNode);\n        return [\n          <rect\n            key={`${rNode.id}_${i}_${j}`}\n            x={(i + 1) * horiOuter}\n            y={(j + 1) * vertOuter}\n            width={horiSpace}\n            height={vertSpace}\n            {...rectStyle}\n          />,\n          <text\n            key={`${rNode.id}_${i}_${j}__label`}\n            x={(i + 1) * horiOuter}\n            y={(j + 2) * vertOuter + textVertMargin}\n            className={labelClass}\n            {...textStyle}\n          >\n            {rNode.label || rNode.id}\n          </text>\n        ];\n      },\n    ),\n  );\n\n  return (\n    <svg\n      id={id}\n      className={className}\n      height={height + (Number(rectStyle.strokeWidth) || 0)}\n      width={width + (Number(rectStyle.strokeWidth) || 0)}\n    >\n      <g style={{transform: 'translate(1px, 1px)'}}>\n        {topX &&\n          <g className=\"top_x-axis__nodes\">{xAxisNodes(0)}</g>\n        }\n        {topX && showLabels &&\n          <g className=\"top_x-axis__labels\">{xAxisLabels(vertOuter)}</g>\n        }\n        {bottomX &&\n          <g className=\"bottom_x-axis__nodes\">{xAxisNodes(y.length * vertOuter)}</g>\n        }\n        {bottomX && showLabels &&\n          <g className=\"top_x-axis__labels\">{xAxisLabels((y.length + 1) * vertOuter)}</g>\n        }\n        {leftY &&\n          <g className=\"left_y-axis__nodes\">{yAxisNodes(0)}</g>\n        }\n        {leftY && showLabels &&\n          <g className=\"top_x-axis__labels\">{yAxisLabels(0)}</g>\n        }\n        {rightY &&\n          <g className=\"right_y-axis__nodes\">{yAxisNodes(x.length * horiOuter)}</g>\n        }\n        {rightY && showLabels &&\n          <g className=\"top_x-axis__labels\">{yAxisLabels((x.length + 1) * horiOuter)}</g>\n        }\n        <g className=\"results__nodes\">{results}</g>\n      </g>\n    </svg>\n  );\n}\n","// third party\nimport React, {\n  useState, useEffect, useLayoutEffect, useMemo, cloneElement\n} from 'react';\nimport Modal from 'react-modal';\n// import { Graph } from 'react-d3-graph';\n// import { Graph, DefaultLink, DefaultNode } from '@vx/network';\nimport {\n  InteractiveForceGraph, ForceGraphNode, ForceGraphLink,ForceGraph\n} from 'react-vis-force';\n// import { scaleCategory20 } from 'd3-scale';\nimport cx from 'classnames/bind';\nimport * as ramda from 'ramda';\n\n// fundamentals\nimport { objFromAry } from './util';\nimport { graphConfig } from './config';\nimport {\n  keys, isChampion, Champion, id,\n  Synergy, SynergyMap, SynergyTypeMap, SynergyType,\n  Item\n} from './knowledge/modeldata';\nimport {\n  State, pickStateVars, mergeStateVars,\n  SynergyThreshold, Threshold, SynergyEnrichment,\n  ItemEnrichment,\n  useAppState,\n} from './knowledge/modelapp';\n\n// loaders\nimport {\n  mapToReactD3Graph, mapToVxNetwork, mapToReactVisForce\n} from './loader/mapsToGraph';\nimport { jsonToMaps } from './loader/dataToMaps';\n\n// components\nimport { ChampionList } from './components/ChampionList';\nimport { SynergyList } from './components/SynergyList';\nimport { ChampionImages } from './components/ChampionImages';\nimport { GridNode, GridChartSvg, GridChartHtml } from './components/GridChart';\n\n// styles\nimport './App.scss';\nimport './components/GridChart.scss';\n\n// data\n// TODO: maybe consolidate into 1 data import?\nimport * as championModule from './data/champions.json';\nimport * as synergyModule from './data/synergies.json';\nimport * as itemModule from './data/items.json';\n\n\ndeclare global {\n  interface Window {\n    champions: any;\n    keyToMap: any; // todo rename to relationToMap\n    tierToMap: any;\n    // valToKey: any;\n    idToChampion: any;\n    idToItem: any;\n    useChampion: any;\n    synergies: any;\n    keyToSynergy: any;\n    selected: any;\n    nodes: any;\n    combineItems: any;\n    recipeToNonBasicItem: any;\n    idToResultsGridNode: any;\n    R: any\n  }\n}\ndeclare module 'react' {\n  interface HTMLAttributes<T> extends AriaAttributes, DOMAttributes<T> {\n    // extends React's HTMLAttributes\n    active?: string|boolean|number;\n  }\n}\nvar R = ramda;\nwindow.R = ramda;\n\n\ntype EnrichedSynergy = Synergy & SynergyEnrichment;\ntype EnrichedItem = Item & ItemEnrichment<EnrichedItem>;\ntype ChampionState = State & Champion;\n\ninterface ItemMap {\n  [id: string]: Item;\n}\ninterface EnrichedItemMap {\n  [id: string]: EnrichedItem;\n}\ninterface EnrichedItemsMap {\n  [id: string]: EnrichedItemsMap;\n}\n\n// DATA\nconst championData = Object.values((championModule as any).default) as Champion[];\nconst synergyData = (synergyModule as any).default as SynergyTypeMap<Synergy>;\nconst itemData = (itemModule as any).default as ItemMap;\n\n// synergy maps\nconst keyToSynergy: SynergyTypeMap<EnrichedSynergy> = R.mapObjIndexed(\n  R.mapObjIndexed(enrichSynergy),\n  synergyData,\n);\nwindow.keyToSynergy = keyToSynergy;\n\n// item maps creation, should be \"atomic\"\nconst idToItem: EnrichedItemMap = R.mapObjIndexed(prepItem, itemData);\nwindow.idToItem = idToItem;\nconst items = Object.values(idToItem);\nconst basicItems = items.filter(item => !item.recipe);\nconst nonBasicItems = items.filter(item => item.recipe);\nconst idToNonBasicItem  = objFromAry(id, nonBasicItems);\nconst recipeToNonBasicItem = R.mergeWith(\n  R.merge,\n  R.mapObjIndexed(\n    R.reduceBy(R.merge, {}, item => item.recipe[1]),\n    R.groupBy(item => item.recipe[0], nonBasicItems),\n  ),\n  R.mapObjIndexed(\n    R.reduceBy(R.merge, {}, item => item.recipe[0]),\n    R.groupBy(item => item.recipe[1], nonBasicItems),\n  ),\n);\nwindow.recipeToNonBasicItem = recipeToNonBasicItem;\nR.mapObjIndexed(stimulateItem, idToItem); // Fills in enriched items\n\n// Create \"empty\" enriched item from item\nfunction prepItem(item: Item, name: string): EnrichedItem {\n  return { ...item, usedIn: [], madeFrom: [] };\n}\n// Mutate enriched item to add its specifications\nfunction stimulateItem(item: EnrichedItem, unused: string, idToItem: EnrichedItemMap) {\n  if (!item.recipe) return;\n  item.madeFrom = item.recipe.map(itemName => idToItem[itemName]);\n  item.madeFrom.forEach(m => m.usedIn = [...m.usedIn, item]);\n}\n\n// LOADS ITEM TO GRIDCHART\nfunction makeGridNodeFromItem(item: Item): GridNode {\n  const {[id]: name, short, effect, icon} = item;\n\n  if (name.length > 9 && short) {\n    return {id: name, label: short, data: effect};\n  }\n  return {id: name, data: effect};\n}\ninterface GridNodeMap {\n  [id: string]: GridNode;\n}\nconst gridAxisNodes: GridNode[] = basicItems.map(makeGridNodeFromItem);\nconst idToResultsGridNode: GridNodeMap =\n  R.mapObjIndexed(makeGridNodeFromItem, idToNonBasicItem);\nwindow.idToResultsGridNode = idToResultsGridNode;\nfunction combineItems(itemA: GridNode, itemB: GridNode) {\n  return idToResultsGridNode[recipeToNonBasicItem[itemA.id][itemB.id][id]];\n}\nwindow.combineItems = combineItems;\n\ninterface ThresholdMap {\n  [threshold: number]: string;\n}\n\nfunction synergyThreshold(\n  posThreshMap: ThresholdMap, exactThreshMap: ThresholdMap, count: number\n): Threshold {\n  if (exactThreshMap[-count]) {\n    return [-count, exactThreshMap[-count]]; // return exacts\n  }\n\n  const sortedThresh = R.toPairs(posThreshMap); // should be sorted\n  const isThresholdLte = (acc, thresh: Threshold) => R.lte(thresh[0], count);\n  const reducedVal = (acc, val) => val;\n  return R.reduceWhile(isThresholdLte, reducedVal, null, sortedThresh);\n}\n\nfunction isKeyPositive(val, key) {\n  return Number(key) > 0;\n}\n\nfunction isKeyNegative(val, key) {\n  return Number(key) < 0;\n}\n\nfunction enrichSynergy(synergy: Synergy, name: string): EnrichedSynergy {\n  const posThreshMap: ThresholdMap = R.pickBy(isKeyPositive, synergy);\n  const negThreshMap: ThresholdMap = R.pickBy(isKeyNegative, synergy);\n  const getThresholdStr = R.curry(synergyThreshold)(posThreshMap, negThreshMap);\n  // add threshold\n  return {\n    ...synergy,\n    name,\n    threshes: R.concat(R.toPairs(negThreshMap), R.toPairs(posThreshMap)),\n    getThresholdStr,\n  };\n}\n\nconst pickReducer = (acc, val) => {\n  val.selected && acc.selected.push(val);\n  val.highlighted && acc.highlighted.push(val);\n  val.hovered && acc.hovered.push(val);\n  return acc;\n}\nconst reduceToPicks = R.reduce(pickReducer);\nfunction setChampionData(data) {\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const champions: ChampionState[] = data.map(c => useAppState(c));\n  const idToChampion: { [id:string]: ChampionState } = objFromAry(id, champions);\n  const keyToMap = jsonToMaps(id, keys, champions);\n  const tierToMap = jsonToMaps(id, ['tier'], champions);\n\n  // gathers selected, highlighted, hovered\n  const emptyPicks = { selected: [], highlighted: [], hovered: [] };\n  const picks = reduceToPicks(emptyPicks, champions);\n\n  window.champions = champions;\n  window.idToChampion = idToChampion;\n  window.keyToMap = keyToMap;\n  window.tierToMap = tierToMap;\n\n  return { keyToMap, tierToMap, idToChampion, champions, ...picks };\n}\n\nfunction useConfig(graphConfig) {\n  const [config, setConfig] = useState(graphConfig);\n\n  const ConfigEditor = (\n    <div id=\"config-editor\">\n    </div>\n  );\n\n  return [config, ConfigEditor];\n}\n\n// all keys must exist to be considered a leaf\nfunction isLeaf(obj): obj is ChampionState {\n  return isChampion(obj);\n}\n\n// walk an js object tree\nfunction walkLeaves(cb, isLeaf, tree) {\n  if (isLeaf(tree)) {\n    cb(tree);\n  } else if (typeof tree !== 'object') {\n    // do nothing\n  } else {\n    Object.values(tree).forEach(child => walkLeaves(cb, isLeaf, child));\n  }\n}\n\nfunction LabeledCheckbox({label, checked, onChange, className, children = []}) {\n  return (\n    <div className={className}>\n      <div className=\"labeledinput\">\n        <input\n          id={label}\n          type=\"checkbox\"\n          value={label}\n          checked={checked}\n          onChange={onChange}\n        />\n        <label htmlFor={label}>{label}</label>\n      </div>\n      {children}\n    </div>\n  );\n}\n\ninterface RenderMapAsCheckboxes {\n  render: React.ReactElement;\n  checked: boolean;\n}\n// return render: list of inputs\nfunction renderMapAsCheckboxes(name, map, depth=0): RenderMapAsCheckboxes {\n  function mapCheckboxOnChange(e) {\n    const { value, checked } = e.target;\n    walkLeaves(champion => champion.setFiltered(!checked), isLeaf, map[value]);\n  }\n\n  const { render, checked } = Object.entries(map[name]).reduce((acc, [k, v]) => {\n    if (isLeaf(v)) {\n      // acc.render.push(renderObjAsCheckbox(v));\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      // acc.render.push(v.render);\n      acc.render.push(\n        <LabeledCheckbox\n          key={v.name}\n          label={v.name}\n          checked={!v.filtered}\n          onChange={e => v.setFiltered(!e.target.checked)}\n          className=\"champion\"\n        />\n      );\n      acc.checked = acc.checked && !v.filtered;\n    } else {\n      const { render, checked } = renderMapAsCheckboxes(k, map[name], depth+1);\n      acc.render.push(render);\n      acc.checked = acc.checked && checked;\n    }\n    return acc;\n  }, { render: [], checked: true });\n\n  return {\n    render: (\n      <LabeledCheckbox\n        key={name}\n        label={name}\n        checked={checked}\n        onChange={mapCheckboxOnChange}\n        className={['checkboxes-container', `depth${depth}`].join(' ')}\n      >\n        {render}\n      </LabeledCheckbox>\n    ),\n    checked,\n  };\n}\n\nfunction ItemReferenceModal() {\n  const [open, setOpen] = React.useState(false);\n\n  function openModal() {\n    setOpen(true);\n  }\n  function closeModal() {\n    setOpen(false);\n  }\n\n  const style = {\n    content: {\n      left: '50%',\n      right: 'unset',\n      bottom: 'unset',\n      padding: 'unset',\n      transform: 'translate(-50%, 0)',\n      border: 'unset',\n    }\n  };\n\n  const nodeStyle = {\n  };\n  const chartStyle = {\n  };\n\n  const renderChart = (\n    <GridChartHtml\n      x={gridAxisNodes}\n      y={gridAxisNodes}\n      vertSpace={64}\n      horiSpace={150}\n      vertGutter={18}\n      horiGutter={10}\n      operator={combineItems}\n      showLabels\n      labelClass={\"grid-labels\"}\n      nodeStyle={nodeStyle}\n      chartStyle={chartStyle}\n    />\n  );\n\n  return (\n    <div className=\"reference-modal\">\n      <button className=\"panel\" onClick={openModal}>Item Reference</button>\n      <Modal\n        isOpen={open}\n        onRequestClose={closeModal}\n        style={style}\n        ariaHideApp={false}\n      >\n        <div id=\"item-grid\">\n          {renderChart}\n        </div>\n      </Modal>\n    </div>\n  )\n}\n\n// creates check boxes with objects at leaves, based on a maps of props vals -> objs\nfunction renderKeysAsCheckboxes(keyToMap, name='filters') {\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const [hidden, setHidden] = useState(true);\n\n  function toggleHidden() {\n    setHidden(!hidden);\n  }\n  const checkboxes = Object.entries(keyToMap).map(([key, valMap]) => {\n    const { render, checked } = renderMapAsCheckboxes(key, keyToMap);\n    return render;\n  });\n\n  return (\n    <div className=\"checkboxes\" is={!hidden ? 'active' : null}>\n      <button className=\"checkboxes-toggle panel\" onClick={toggleHidden}>\n        {name}\n      </button>\n      <div className=\"checkboxes-container panel\" hidden={hidden}>\n        {checkboxes}\n      </div>\n    </div>\n  );\n}\n\nconst filterNull = R.filter(R.identity);\n// Evaluates the thresholds that arise from a set of champions\nfunction evalChampionThresholds(champions: Champion[]): SynergyThreshold[] {\n  return Object.entries(keyToSynergy).flatMap(([k, synergyMap]) => {\n    const synergies = champions.flatMap(c => c[k]);\n    const synergyCountMap = R.countBy(R.identity, synergies);\n    const mapCountsToThresholds = R.map(([synName, synCount]) => {\n      const foundThresh = synergyMap[synName].getThresholdStr(synCount);\n      if (!foundThresh) return;\n      return {name: synName, threshes: [foundThresh]};\n    });\n    return filterNull(mapCountsToThresholds(R.toPairs(synergyCountMap)));\n  });\n}\nfunction extractSynergyThresholds(champion: Champion): SynergyThreshold[] {\n  const keySyns = R.toPairs(R.pick(keys, champion));\n  const keySynPaths = R.uniq(R.unnest(R.map(([k,vs]) => R.map(v => [k, v], vs), keySyns)))\n  return keySynPaths.map(path => R.path(path, keyToSynergy));\n}\n\nfunction linkDisplayRules(a: State, b: State): Partial<State> {\n  return {\n    filtered: a.filtered || b.filtered,\n    selected: a.selected && b.selected,\n    grouped: a.grouped && b.grouped,\n    highlighted: (a.highlighted && b.hovered) || (a.hovered && b.highlighted),\n    hovered: false,\n  };\n}\n\nfunction Ariandel() {\n  const start = Date.now();\n  // const [config, ConfigEditor] = useConfig(graphConfig);\n\n  const {\n    champions, keyToMap, tierToMap, idToChampion, selected, highlighted, hovered\n  } = setChampionData(championData);\n  const [hoveredChampion] = hovered;\n\n  function toggleSelectChampion(id: string) {\n    const champion = idToChampion[id];\n    if (champion.filtered) return;\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    champion.setSelected(!champion.selected);\n  }\n\n  function relatedChampions(sourceC: ChampionState): ChampionState[] {\n    return R.uniqBy((c: ChampionState) => c[id], keys.flatMap(\n      key => sourceC[key].flatMap(\n        (syn: string) => Object.values(keyToMap[key][syn])\n      )\n    ).filter(c => c[id] !== sourceC[id]));\n  }\n\n  function setChampionHighlight(id: string, bool: boolean) {\n    const champion: ChampionState = idToChampion[id];\n    if (champion.filtered) return;\n    relatedChampions(champion).forEach(c => c.setHighlighted(bool));\n    champion.setHovered(bool);\n  }\n\n  function attachNodeEvents(node) {\n    return cloneElement(node, {\n      onMouseDown: () => toggleSelectChampion(node.props.node.id),\n      onMouseOver: () => setChampionHighlight(node.props.node.id, true),\n      onMouseOut: () => setChampionHighlight(node.props.node.id, false),\n    });\n  }\n\n  const {nodes, links} = mapToReactVisForce(\n      id, champions, Object.values(keyToMap), pickStateVars, linkDisplayRules);\n  window.nodes = nodes;\n  console.log('ARIANDEL RENDER', Date.now() - start);\n  // TODO turn left/right-container to be real presentation components\n  return (\n    <div className=\"app\" style={{height: '100vh', width: '100vw'}}>\n      <div className=\"left-container\">\n        {renderKeysAsCheckboxes(tierToMap, 'tier')}\n        {renderKeysAsCheckboxes(R.pick(['origin'], keyToMap), 'origin')}\n        {renderKeysAsCheckboxes(R.pick(['class'], keyToMap), 'class')}\n      </div>\n      <div className=\"right-container\">\n        <ChampionList\n          className=\"panel selected-champions\"\n          title=\"Selected\"\n          champions={selected}\n          onClick={toggleSelectChampion}\n        />\n        <SynergyList\n          className=\"panel selected-synergies\"\n          title=\"Synergies\"\n          synThreshes={evalChampionThresholds(selected)}\n        />\n        <ChampionList\n          className=\"panel highlighted-champions\"\n          title=\"Neighbors\"\n          champions={highlighted}\n        />\n         <SynergyList\n          className=\"panel hovered-synergies\"\n          title={hoveredChampion ? hoveredChampion[id] : 'No Champion'}\n          synThreshes={extractSynergyThresholds(hoveredChampion || [])}\n        />\n      </div>\n      <div className=\"top-container\">\n        <ItemReferenceModal />\n      </div>\n      <div id=\"graph\">\n        <ForceGraph\n          // highlightDependencies\n          showLabels\n          zoom\n          zoomOptions={{\n            maxScale: 1,\n            minScale: 1,\n          }}\n          simulationOptions={{\n            radiusMargin: 36,\n            // strength: { x: -.04, y: -.01 },\n            // animate: true,\n            alphaDecay: .003, // lower the more grouped\n            height: window.innerHeight,\n            width: window.innerWidth,\n          }}\n        >\n          {nodes.map(forceNode => (\n            <ForceGraphNode\n              key={forceNode.node.id}\n              {...forceNode}\n            />\n          )).map(attachNodeEvents)}\n          {links.map(forceLink => (\n            <ForceGraphLink\n              key={`${forceLink.link.source}=>${forceLink.link.target}`}\n              {...forceLink}\n            />\n          ))}\n          <defs>\n            <ChampionImages champions={champions} />\n          </defs>\n        </ForceGraph>\n      </div>\n    </div>\n  );\n}\n\nexport default Ariandel;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\n// import Anor from './Anor';\n// import Astoria from './Astoria';\nimport Ariandel from './Ariandel';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Ariandel />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// Data replicas in js\n\n// object keys properties\nexport const keys: SynergyType[] = ['class', 'origin'];\n\n// unique object property\nexport type Identity = 'name';\nexport const id: Identity = 'name';\nexport interface Identifiable {\n  name: string;\n}\n\n// champion interface (using object keys and object props)\nexport interface Champion {\n  class: string[];\n  origin: string[];\n  name: string;\n  cost: number;\n  icon: string;\n}\n\nexport const isChampion = o => {\n  return keys.reduce((acc, key) => acc && Boolean(o[key]), true);\n};\n\n/* this whole section is bad */\nexport const classstrs = [\n  'assassin', 'blademaster', 'brawler', 'elementalist','guardian',\n  'gunslinger', 'knight', 'ranger', 'shapeshifter', 'sorcerer'\n].join('|');\n\nexport const originstrs = [\n  'demon', 'dragon', 'exile', 'glacial', 'hextech', 'imperial', 'ninja',\n  'robot', 'pirate', 'phantom', 'noble', 'void', 'wild', 'yordle'\n].join('|');\n\nexport const datatype = {\n  name: '',\n  class: [classstrs],\n  origin: [originstrs],\n  iconSrc: '',\n};\n\nexport type SynergyType = 'class' | 'origin';\n/* end bad sectiong */\n\n// map of synergy name to synergy data\nexport interface SynergyMap {\n  [synergy: string]: Synergy;\n}\n\nexport interface SynergyTypeMap<T> {\n  [synergyType: string]: {\n    [synergy: string]: T;\n  }\n}\n\nexport interface Synergy {\n  passive?: string;\n  [threshold: number]: string;\n}\n\nexport interface Item {\n  name: string,\n  short?: string,\n  recipe?: string[],\n  effect: string,\n  icon?: string,\n}\n\n// checks for module exports for node\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = {\n    keys,\n    id,\n    isChampion,\n    classstrs,\n    originstrs,\n    datatype,\n  };\n}"],"sourceRoot":""}