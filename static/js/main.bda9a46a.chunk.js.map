{"version":3,"sources":["util.js","knowledge/modelapp.ts","loader/mapsToGraph.ts","loader/dataToMaps.js","components/ChampionList.tsx","components/SynergyList.tsx","components/ChampionImages.tsx","components/GridChart.tsx","Ariandel.tsx","serviceWorker.js","index.js","knowledge/modeldata.ts"],"names":["objFromAry","key","ary","reduce","obj","el","urlParams","URLSearchParams","window","location","search","BooleanVal","deserialize","v","serialize","useAppState","t","id","_useState3","useState","_useState4","Object","slicedToArray","filtered","setFiltered","_useUrlState","name","Type","defaultValue","hasLoaded","_useState","has","get","_useState2","value","setValue","useEffect","delete","set","history","replaceState","concat","pathname","useUrlState","_useUrlState2","selected","setSelected","_useState5","_useState6","grouped","setGrouped","_useState7","_useState8","highlighted","setHighlighted","_useState9","_useState10","hovered","setHovered","objectSpread","pickStateVars","R","NGraph","ngraph","mapReactVisForceToNGraph","fLinks","graph","arguments","length","undefined","forEach","fLink","addLink","link","source","target","encodeStr","s","replace","mapToReactVisForce","objs","maps","nodeProps","linkProps","nodes","map","o","props","node","radius","className","cx","labelClass","fill","hist","links","entries","_ref","_ref2","synergy","objMaps","values","i","src","j","tgt","lProps","rvfLink","push","jsonToMaps","keys","jsonObjs","val","m","k","defineProperty","ChampionList","title","champions","onClick","handleOnClick","event","championId","textContent","renderChampions","c","react_default","a","createElement","SynergyList","synThreshes","renderThresholds","threshes","_ref3","count","threshStr","Math","abs","ChampionImages","Fragment","patternUnits","width","height","x","y","href","icon","GridChartHtml","operator","_props$showLabels","showLabels","_props$vertSpace","vertSpace","_props$horiSpace","horiSpace","_props$vertGutter","vertGutter","_props$horiGutter","horiGutter","_props$topX","topX","_props$bottomX","bottomX","_props$leftY","leftY","_props$rightY","rightY","_props$nodeStyle","nodeStyle","_props$labelStyle","labelStyle","_props$chartStyle","chartStyle","baseChartStyle","textVertMargin","compressed","renderGridNode","gridAutoColumns","gridAutoRows","gridColumnGap","gridRowGap","_useState2$","selectedX","selectedY","setSelectedXY","renderLabel","style","label","renderData","data","xAxisNodes","rowPos","gridColumn","gridRow","selected-x","element","yAxisNodes","colPos","selected-y","resultsNodes","yNode","xResults","xNode","rNode","S","d3","centralityModes","graphColors","rawChampionData","championModule","synergyData","synergyModule","itemData","itemModule","metaConfig","metaModule","championData","short","toLowerCase","keyToSynergy","posThreshMap","isKeyPositive","negThreshMap","isKeyNegative","getThresholdStr","synergyThreshold","idToItem","item","usedIn","madeFrom","items","basicItems","filter","recipe","nonBasicItems","idToNonBasicItem","recipeToNonBasicItem","makeGridNodeFromItem","effect","unused","itemName","toConsumableArray","gridAxisNodes","idToResultsGridNode","combineItems","itemA","itemB","exactThreshMap","sortedThresh","acc","thresh","Number","reduceToPicks","isLeaf","isChampion","LabeledCheckbox","checked","onChange","_ref$children","children","type","htmlFor","renderMapAsCheckboxes","depth","_Object$entries$reduc","render","e","_renderMapAsCheckboxe","_e$target","walkLeaves","cb","tree","child","champion","join","ItemReferenceModal","_React$useState","React","_React$useState2","open","setOpen","renderChart","floor","innerHeight","innerWidth","lib_default","isOpen","onRequestClose","content","top","left","right","bottom","padding","transform","border","ariaHideApp","renderKeysAsCheckboxes","keyToMap","hidden","setHidden","checkboxes","_ref4","_ref5","_renderMapAsCheckboxe2","is","filterNull","evalChampionThresholds","flatMap","_ref6","_ref7","synergyMap","synergies","synergyCountMap","mapCountsToThresholds","_ref8","_ref9","synName","synCount","foundThresh","extractSynergyThresholds","keySyns","_ref10","_ref11","vs","path","linkDisplayRules","b","ExclusiveOptions","options","renderOptions","op","Ariandel","Date","now","_setChampionData","idToChampion","tierToMap","picks","setChampionData","hoveredChampion","centralityMode","setCentralityMode","toggleSelectChampion","setChampionHighlight","bool","sourceC","syn","_mapToReactVisForce","maybeMode","Nothing","maybeAnalyzedNodes","mode","analysis","Centrality","aValues","max","apply","min","domainColors","domain","n","stroke","applyCentrality","renderedNodes","forceNode","react_vis_force","assign","cloneElement","onMouseDown","onMouseOver","onMouseOut","analyze","zoom","zoomOptions","maxScale","minScale","simulationOptions","radiusMargin","alphaDecay","forceLink","patch","Boolean","hostname","match","ReactDOM","src_Ariandel","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","__webpack_require__","d","__webpack_exports__","classstrs","originstrs","datatype","class","origin","iconSrc","exports"],"mappings":"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","file":"static/js/main.bda9a46a.chunk.js","sourcesContent":["// no conflicting keys\nexport function objFromAry(key, ary) {\n  return ary.reduce((obj, el) => {\n    obj[el[key]] = el;\n    return obj;\n  }, {});\n}\n","import * as R from 'ramda';\nimport { useState, useEffect} from 'react';\n\nimport { Item } from './modeldata';\n\n/* Used as global singleton */\nconst urlParams = new URLSearchParams(window.location.search);\n/**\n * Only pulls from url state once, on load. But will continue to update url.\n * This is an optimzation requirement.\n */\nfunction useUrlState(name, Type, defaultValue) {\n  let hasLoaded = false;\n\n  const [value, setValue] = useState(\n    urlParams.has(name) ? Type.deserialize(urlParams.get(name)) : defaultValue\n  );\n\n  useEffect(() => {\n    if (!hasLoaded) return;\n\n    if (value === defaultValue) {\n      urlParams.delete(name);\n    } else {\n      urlParams.set(name, Type.serialize(value));\n    }\n    window.history.replaceState({}, '', `${window.location.pathname}?${urlParams}`);\n  }, [value]);\n\n  hasLoaded = true;\n\n  return [value, setValue];\n}\n\nconst BooleanVal = {\n  deserialize(v: string): boolean {\n    return v === '1';\n  },\n  serialize(v: boolean): string {\n    return v ? '1' : '0';\n  },\n};\n\n// State handling in app\ninterface StateVars {\n  filtered: boolean;\n  selected: boolean;\n  grouped: boolean;\n  highlighted: boolean;\n  hovered: boolean;\n}\ninterface StateSets {\n  setFiltered: (boolean) => void;\n  setSelected: (boolean) => void;\n  setGrouped: (boolean) => void;\n  setHighlighted: (boolean) => void;\n  setHovered: (boolean) => void;\n}\n// Stateful properites of for interactable objects\nexport type State = StateVars & StateSets;\n// Attaches State functionality to object\nexport function useAppState<T>(t: T, id: string): State & T {\n  const [filtered, setFiltered] = useState(false);\n  const [selected, setSelected] = useUrlState(id, BooleanVal, false);\n  // const [selected, setSelected] = useQueryParam(id.replace(/[' ]/g,''), BooleanParam);\n  const [grouped, setGrouped] = useState(false);\n  const [highlighted, setHighlighted] = useState(false);\n  const [hovered, setHovered] = useState(false);\n\n  // useEffect(() => {\n  //   setSelectedQ(selected);\n  // }, [selected]);\n\n  return {\n    ...t,\n    filtered,\n    selected,\n    grouped,\n    highlighted,\n    hovered,\n    setFiltered,\n    setSelected,\n    setGrouped,\n    setHighlighted,\n    setHovered,\n  };\n}\n\n// Picks state props from an object\nexport const pickStateVars: (o: StateVars) => StateVars = R.pick([\n  'filtered',\n  'selected',\n  'grouped',\n  'highlighted',\n  'hovered',\n]);\n\nexport const mergeStateVars = (a: StateVars, b: StateVars): StateVars => ({\n  filtered: a.filtered && b.filtered,\n  selected: a.selected && b.selected,\n  grouped: a.grouped && b.grouped,\n  highlighted: a.highlighted && b.highlighted,\n  hovered: a.hovered && b.hovered,\n});\n\n\n// TODO: move somewhere because these are data+app convenience types\n// Synergy handling in app\nexport type Threshold = [number, string];\n\nexport interface SynergyThreshold {\n  name: string;\n  threshes: Threshold[];\n}\n\n// Adds stuff to synergy to make it easier to use\nexport interface SynergyEnrichment extends SynergyThreshold {\n  getThresholdStr: (n: number) => Threshold | null;\n}\n\nexport interface ItemEnrichment<T extends Item> {\n  usedIn: T[]; // the items this item is in recipes for\n  madeFrom: T[]; // the items this item is made from\n}\n\nexport interface ChampionEnrichment {\n  short: string; // short name, lowercase using only \\w characters\n}\n","import cx from 'classnames/bind';\nimport * as R from 'ramda';\nimport * as ngraph from 'ngraph.graph';\n\nimport { NGraphGraph } from '../types/ngraph';\n\n// if false, then hide. if true, then filter\nconst hideFilter = false;\n\nconst NGraph = ngraph as unknown as () => NGraphGraph;\n\n/// EXPORT from react-vis-force to ngraph\nexport const mapReactVisForceToNGraph = (fLinks: RVF_ForceLink[], graph = NGraph()) => {\n  fLinks.forEach(fLink => graph.addLink(fLink.link.source, fLink.link.target));\n  return graph;\n}\n\nexport function encodeStr(s: string) {\n  return s.replace(/[\\W]/g,'');\n}\n\n/// EXPORT to react-vis-force\ntype HexColor = string;\ninterface RVF_ForceNode {\n  id: string;\n  node: RVF_Node;\n  cx?: number;\n  cy?: number;\n  r?: number;\n  className?: string;\n  labelClass?: string;\n  fill?: HexColor|string;\n  opacity?: number; // 0 - 1\n  stroke?: HexColor|string;\n  strokeWidth?: number; // in pixels\n  onMouseDown?: (e: MouseEvent) => void;\n  onMouseOver?: (e: MouseEvent) => void;\n  onMouseOut?: (e: MouseEvent) => void;\n}\ninterface RVF_ForceLink {\n  link: RVF_Link,\n  edgeOffset?: number;\n  strokeWidth?: number;\n  className?: string;\n  opacity?: number;\n  stroke?: HexColor;\n  pathLength?: number;\n  onMouseDown?: (e: MouseEvent) => void;\n  onMouseOver?: (e: MouseEvent) => void;\n  onMouseOut?: (e: MouseEvent) => void;\n}\ninterface RVF_Node {\n  id: string;\n  radius?: number;\n}\ninterface RVF_Link {\n  source: string;\n  target: string;\n  value?: number;\n}\ntype Identifiable<S extends string, T = {}> = Record<S, string> & T & {icon: string};\n/**\n * @param id       parameter that exists in T\n * @param objs     List of objects\n * @param maps.....Maps mappings of \"Keys\" to objects (TODO: deprecate in\n *                 favor of extracting this information from objs)\n * @param nodeProps Function that extracts properties from a T object\n * @param linkPRops Function that extracts properties from 2 T objects\n */\ntype mapToReactVisForce =\n  <S extends string, T, U extends Identifiable<S, T>> (\n    id: S,\n    objs: U[],\n    maps,\n    nodeProps: (o: T) => object,\n    linkProps: (a: T, b: T) => object,\n  ) => { nodes: RVF_ForceNode[], links: RVF_ForceLink[] };\nexport const mapToReactVisForce: mapToReactVisForce = (id, objs, maps, nodeProps, linkProps) => {\n  // creates nodes\n  const nodes: RVF_ForceNode[] = objs.map(o => {\n    const props = nodeProps(o);\n    const rvfNode = {\n      id: o[id],\n      node: {\n        id: o[id],\n        radius: 12,\n      },\n      className: cx('graph-node', props),\n      labelClass: cx('node-label', props),\n      fill: `url(#${encodeStr(o[id])}-img)`,\n      // fill: `url(${o.icon})`,\n      // fill: 'url(#myGradient)',\n    };\n    return rvfNode;\n  });\n\n // creates links\n  const hist = {}; // (hist)ory of links made\n  // the extra arrays are to influence draw order\n  const links: RVF_ForceLink[] = [];\n  const sLinks: RVF_ForceLink[] = [];\n  const hLinks: RVF_ForceLink[] = [];\n  maps.forEach(map => {\n    Object.entries(map).forEach(([synergy, objMaps]) => {\n      // TODO, this is clearly bad, should instead find and hide links between\n      // synergies with only a thresh of 1\n      if (synergy === \"Avatar\") {\n        return;\n      }\n      const objs = Object.values(objMaps);\n      for (let i = 0; i < objs.length - 1; i++) {\n        const src = objs[i];\n        const source: string = src[id];\n        if (!hist[source]) {\n          hist[source] = {};\n        }\n        for (let j = i + 1; j < objs.length; j++) {\n          const tgt = objs[j];\n          const target: string = tgt[id];\n          if (hist[source][target]) continue; // drop dup links\n\n          const lProps = linkProps(src, tgt);\n          const rvfLink: RVF_ForceLink = {\n            link: { source, target, value: 4 },\n            className: cx('graph-link', lProps),\n          };\n\n          // TODO, shouldnt expose highlight and selected\n          const __unsafe_lProps = lProps as any;\n          // const linksPtr =\n          //   __unsafe_lProps.highlighted ? hLinks :\n          //     __unsafe_lProps.selected ? sLinks : links;\n          const linksPtr = links;\n\n          linksPtr.push(rvfLink);\n          hist[source][target] = rvfLink; // record link\n        }\n      }\n    });\n  });\n\n  return { nodes, links: links.concat(sLinks).concat(hLinks) };\n}\n\n/// EXPORT TO vx/network\nexport function mapToVxNetwork() {\n\n}\n\n\n/// EXPORT TO react-d3-graph\nfunction setNodeAsSelected(node) {\n  node.color = 'lightgreen';\n  // node.strokeColor = 'forestgreen';\n  node.highlightStrokeColor = 'forestgreen';\n  node.fontSize = 20;\n  node.highlightFontSize = 40;\n}\n\nexport function mapToReactD3Graph(id, objs, allObjMap, maps) {\n  let nodes;\n  if (hideFilter) {\n    nodes = objs.filter(o => o.active)\n  }\n  nodes = nodes.map(o => {\n    const node = {\n      ...o,\n      id: o[id],\n      opacity: o.active ? 1 : 0.3,\n    };\n    if (o.selected) {\n      setNodeAsSelected(node);\n    }\n    return node;\n  });\n\n  const hist = {};\n\n  const links = maps.reduce((lks, map) => {\n    Object.values(map).forEach(objMaps => {\n      const objs = Object.values(objMaps);\n      for (let i = 0; i < objs.length - 1; i++) {\n        const source = objs[i][id];\n        if (!hist[source]) {\n          hist[source] = {};\n        }\n        for (let j = i + 1; j < objs.length; j++) {\n          const target = objs[j][id];\n          if (hist[source][target]) continue;\n          const link = { source, target, opacity: 1 };\n          if (!allObjMap[target].active || !allObjMap[source].active) {\n            if (hideFilter) {\n              continue;\n            }\n            link.opacity = 0.3;\n          }\n          lks.push(link);\n          hist[source][target] = link;\n        }\n      }\n    });\n    return lks;\n  }, []);\n\n  if (nodes.length === 0) {\n    nodes.push({id: '???'});\n  }\n\n  return { nodes, links };\n}\n","// maps of json objs by key\n// todo rename to group by key\nexport function jsonToMaps(id, keys, jsonObjs) {\n  return jsonObjs.reduce((maps, obj) => {\n    keys.forEach(key => {\n      [].concat(obj[key]).forEach(val => {\n        if (!maps[key][val]) {\n          maps[key][val] = {};\n        }\n        maps[key][val][obj[id]] = obj;\n      });\n    });\n    return maps;\n  }, keys.reduce((m, k) => ({ ...m, [k]: {} }), {}));\n}\n","import React from 'react';\nimport cx from 'classnames/bind';\n\nimport { Champion } from '../knowledge/modeldata';\n\ninterface ChampionListProps {\n  title: string;\n  className?: string;\n  champions: Champion[];\n  onClick?: (championName: string) => void;\n}\n\n// Component that shows list of champions\nexport function ChampionList(props: ChampionListProps) {\n  const {title, className, champions, onClick} = props;\n\n  function handleOnClick(event: React.MouseEvent<HTMLDivElement>) {\n    const target = event.target as HTMLDivElement;\n    const championId = target.textContent;\n    onClick && onClick(championId);\n  }\n\n  const renderChampions = champions.map(c => (\n    <div key={c.name} className=\"champion\" onClick={handleOnClick}>\n      {c.name}\n    </div>\n  ));\n  return (\n    <div className={cx('champion-list', className)}>\n      <div className=\"title\">{title} ({champions.length})</div>\n      <div className=\"champions\">{renderChampions}</div>\n    </div>\n  )\n}\n","import React from 'react';\nimport cx from 'classnames/bind';\n\nimport { SynergyThreshold } from '../knowledge/modelapp';\n\ninterface SynergyListProps {\n  title: string;\n  className?: string;\n  synThreshes: SynergyThreshold[];\n}\n\nexport function SynergyList(props: SynergyListProps) {\n  const {synThreshes, title, className} = props;\n  const renderThresholds = synThreshes.map(({name, threshes}) => (\n    <div key={name} className=\"synergy\">\n      <div className=\"name\">{name}</div>\n      {threshes.map(([count, threshStr]) => (\n        <div key={threshStr} className=\"flex\">\n          <div className=\"threshold\">{Math.abs(count)}</div>\n          <div className=\"synergy-detail\">{threshStr}</div>\n        </div>\n      ))}\n    </div>\n  ));\n\n  return (\n    <div className={cx('synergy-list', className)}>\n      <div className=\"title\">{title}</div>\n      <div className=\"synergies\">{renderThresholds}</div>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport { Champion } from '../knowledge/modeldata';\nimport { encodeStr } from '../loader/mapsToGraph';\n\ninterface ChampionImagesProps {\n  champions: Champion[];\n}\n\n// helper component for svg\nexport function ChampionImages(props: ChampionImagesProps) {\n  const {champions} = props;\n  return (\n    <>\n      {champions.map(c => (\n        <pattern\n          key={c.name}\n          id={encodeStr(c.name)+'-img'}\n          patternUnits=\"objectBoundingBox\"\n          width=\"1\"\n          height=\"1\"\n          x=\"0\"\n          y=\"0\"\n        >\n          <image\n            className=\"node-icon\"\n            href={c.icon}\n            x=\"0\"\n            y=\"0\"\n          />\n        </pattern>\n      ))}\n    </>\n  );\n}\n","import React, {useState, cloneElement} from 'react';\nimport * as R from 'ramda';\nimport cx from 'classnames/bind';\n\nexport interface GridNode {\n  id: string;\n  element?: React.ReactElement;\n  data?: string;\n  label?: string;\n}\ninterface GridChartProps {\n  id?: string;\n  className?: string;\n  height?: number;\n  width?: number;\n  x: GridNode[];\n  y: GridNode[];\n  operator: (x: GridNode, y: GridNode) => GridNode|undefined;\n  vertSpace?: number; // doesn't support % yet\n  horiSpace?: number; // doesn't support % yet\n  vertGutter?: number;\n  horiGutter?: number;\n  topX?: boolean;\n  bottomX?: boolean;\n  leftY?: boolean;\n  rightY?: boolean;\n  showLabels?: boolean;\n  labelClass?: string;\n  textVertMargin?: number;\n  compressed?: boolean;\n  renderGridNode?: (n: GridNode) => React.ReactElement;\n}\ninterface GridChartHtmlProps extends GridChartProps {\n  nodeStyle?: React.CSSProperties;\n  labelStyle?: React.CSSProperties;\n  chartStyle?: React.CSSProperties;\n}\nexport function GridChartHtml(props: GridChartHtmlProps) {\n  const {\n    id,\n    className,\n    x,\n    y,\n    operator,\n    showLabels = false,\n    labelClass,\n    vertSpace = 40,\n    horiSpace = 50,\n    vertGutter = 10,\n    horiGutter = vertGutter,\n    topX = true,\n    bottomX = false, // doesnt work right now\n    leftY = true,\n    rightY = false, // doesnt work right now\n    nodeStyle = {},\n    labelStyle = {},\n    chartStyle = {},\n    textVertMargin = -16, // for alignment of line height\n    compressed = false,\n    renderGridNode,\n  } = props;\n\n  const baseChartStyle = {\n    gridAutoColumns: horiSpace,\n    gridAutoRows: vertSpace,\n    gridColumnGap: horiGutter,\n    gridRowGap: vertGutter,\n    ...chartStyle,\n  } as React.CSSProperties;\n\n  const [[selectedX, selectedY], setSelectedXY] = useState([-1, -1]);\n\n  const renderLabel = (node: GridNode) => (\n    <span className={cx('node-label', labelClass)} style={labelStyle} title={node.id}>\n      {node.label || node.id}\n    </span>\n  );\n\n  const renderData = (node: GridNode) => (\n     <div className=\"node-data\">{node.data ? node.data : ''}</div>\n  );\n\n  const xAxisNodes = (rowPos) => x.map((node, i) => {\n    const gridColumn = `${i + 2} / ${i + 3}`;\n    const gridRow = `${rowPos} / ${rowPos + 1}`;\n    return (\n      <div\n        key={node.id + '_x'}\n        className={cx(\"grid-node x-axis-node\",\n          { 'selected-x': selectedX === i },\n        )}\n        style={{gridColumn, gridRow, ...nodeStyle}}\n        onClick={() => setSelectedXY([i, -1])}\n      >\n        {node.element || renderData(node)}\n        {showLabels && renderLabel(node)}\n      </div>\n    );\n  });\n\n  const yAxisNodes = (colPos) => y.map((node, j) => {\n    const gridColumn = `${colPos} / ${colPos + 1}`;\n    const gridRow = `${j + 2} / ${j + 3}`;\n    return (\n      <div\n        key={node.id + '_Y'}\n        className={cx(\"grid-node y-axis-node\",\n          { 'selected-y': selectedY === j },\n        )}\n        style={{gridColumn, gridRow, ...nodeStyle}}\n        onClick={() => setSelectedXY([-1, j])}\n      >\n        {node.element || renderData(node)}\n        {showLabels && renderLabel(node)}\n      </div>\n    );\n  });\n\n  const resultsNodes = y.map((yNode, j) => {\n    const xResults = x.map((xNode, i) => {\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      const [selected, setSelected] = useState(false);\n      const rNode = operator(xNode, yNode);\n      return (\n        <div\n          key={`${rNode.id}_${i}_${j}`}\n          className={cx(\"grid-node result-node\",\n            { 'selected-x': selectedX === i },\n            { 'selected-y': selectedY === j },\n            { selected },\n          )}\n          style={nodeStyle}\n          onClick={() => {\n            setSelectedXY([i, j]);\n            setSelected(!selected);\n          }}\n        >\n          {rNode.element || renderData(rNode)}\n          {showLabels && renderLabel(rNode)}\n        </div>\n      );\n    });\n    return (\n      <div className=\"grid-node-row\" key={`${yNode.id}_row_${j}`}>\n        {xResults}\n      </div>\n    );\n  });\n\n  return (\n    <div id={id} className={cx('grid-chart', className)} style={baseChartStyle}>\n      {topX && leftY && <div style={{gridColumn: '1 / 2', gridRow: '1 / 2'}} />}\n      {topX && xAxisNodes(1)}\n      {leftY && yAxisNodes(1)}\n      {bottomX && xAxisNodes(y.length)}\n      {rightY && yAxisNodes(x.length)}\n      {resultsNodes}\n    </div>\n  );\n}\n\n\n/* Example */\n// const rectStyle = {\n//   stroke: '#EEE',\n//   strokeWidth: 2,\n//   fillOpacity: 0,\n//   rx: 5,\n//   ry: 5,\n// };\n\n// const textStyle = {\n//   fill: '#EEE',\n// };\n\n// const renderChart = (\n//   <GridChartSvg\n//     x={gridAxisNodes}\n//     y={gridAxisNodes}\n//     vertSpace={40}\n//     horiSpace={100}\n//     vertGutter={16}\n//     horiGutter={10}\n//     operator={combineItems}\n//     showLabels\n//     labelClass={\"grid-labels\"}\n//     rectStyle={rectStyle}\n//     textStyle={textStyle}\n//   />\n// );\n// interface GridChartSvgProps extends GridChartProps {\n//   rectStyle?: React.SVGAttributes<SVGRectElement>;\n//   textStyle?: React.SVGAttributes<SVGTextElement>;\n// }\n// /**\n//  * Cant use SVG because SVG sucks\n//  */\n// export function GridChartSvg(props: GridChartSvgProps) {\n//   const {\n//     id,\n//     className,\n//     x,\n//     y,\n//     operator,\n//     showLabels = false,\n//     labelClass,\n//     vertSpace = 40,\n//     horiSpace = 50,\n//     vertGutter = 10,\n//     horiGutter = vertGutter,\n//     topX = true,\n//     bottomX = false,\n//     leftY = true,\n//     rightY = false,\n//     rectStyle = {strokeWidth: 0},\n//     textStyle = {},\n//     textVertMargin = -5, // for alignment of line height\n//     renderGridNode,\n//   } = props;\n\n//   const {\n//     height = (y.length + 1) * (vertSpace + vertGutter) - (showLabels ? 0 : vertGutter),\n//     width = (x.length + 1) * (horiSpace + horiGutter) - horiGutter,\n//   } = props;\n\n//   const horiOuter = horiSpace + horiGutter;\n//   const vertOuter = vertSpace + vertGutter;\n\n//   const Node = (props) => {\n//     return (\n//     <>\n//       <rect {...props} />\n//       {cloneElement(props.children, {\n//         x: props.x,\n//         y: props.y,\n//       })}\n//     </>\n//   )};\n\n//   const xAxisNodes = (yPos) => x.map((node, i) => (\n//     <Node\n//       key={node.id + '_x'}\n//       x={(i + 1) * horiOuter}\n//       y={yPos}\n//       width={horiSpace}\n//       height={vertSpace}\n//       {...rectStyle}\n//     >\n//       {node.element\n//         || (renderGridNode && renderGridNode(node))\n//         || <foreignObject\n//             transform={`translate(2, 2)`}\n//             fontSize=\"10\"\n//             width={horiSpace - 4}\n//             height={vertSpace - 4}\n//            >\n//             <span>{node.data || node.id}</span>\n//            </foreignObject>\n//       }\n//     </Node>\n//   ));\n\n//   const xAxisLabels = (yPos) => x.map((node, i) => (\n//     <text\n//       key={node.id + '_x_label'}\n//       x={(i + 1) * horiOuter}\n//       y={yPos + textVertMargin}\n//       className={labelClass}\n//       {...textStyle}\n//     >\n//       {node.label || node.id}\n//     </text>\n//   ));\n\n//   const yAxisNodes = (xPos) => y.map((node, i) => (\n//     <rect\n//       key={node.id + '_y'}\n//       x={xPos}\n//       y={(i + 1) * vertOuter}\n//       width={horiSpace}\n//       height={vertSpace}\n//       {...rectStyle}\n//     />\n//   ));\n\n//   const yAxisLabels = (xPos) => x.map((node, i) => (\n//     <text\n//       key={node.id + '_x_label'}\n//       x={xPos}\n//       y={(i + 2) * vertOuter + textVertMargin}\n//       className={labelClass}\n//       {...textStyle}\n//     >\n//       {node.label || node.id}\n//     </text>\n//   ));\n\n//   const results = y.map(\n//     (yNode, j) => x.map(\n//       (xNode, i) => {\n//         const rNode = operator(xNode, yNode);\n//         return [\n//           <rect\n//             key={`${rNode.id}_${i}_${j}`}\n//             x={(i + 1) * horiOuter}\n//             y={(j + 1) * vertOuter}\n//             width={horiSpace}\n//             height={vertSpace}\n//             {...rectStyle}\n//           />,\n//           <text\n//             key={`${rNode.id}_${i}_${j}__label`}\n//             x={(i + 1) * horiOuter}\n//             y={(j + 2) * vertOuter + textVertMargin}\n//             className={labelClass}\n//             {...textStyle}\n//           >\n//             {rNode.label || rNode.id}\n//           </text>\n//         ];\n//       },\n//     ),\n//   );\n\n//   return (\n//     <svg\n//       id={id}\n//       className={className}\n//       height={height + (Number(rectStyle.strokeWidth) || 0)}\n//       width={width + (Number(rectStyle.strokeWidth) || 0)}\n//     >\n//       <g style={{transform: 'translate(1px, 1px)'}}>\n//         {topX &&\n//           <g className=\"top_x-axis__nodes\">{xAxisNodes(0)}</g>\n//         }\n//         {topX && showLabels &&\n//           <g className=\"top_x-axis__labels\">{xAxisLabels(vertOuter)}</g>\n//         }\n//         {bottomX &&\n//           <g className=\"bottom_x-axis__nodes\">{xAxisNodes(y.length * vertOuter)}</g>\n//         }\n//         {bottomX && showLabels &&\n//           <g className=\"top_x-axis__labels\">{xAxisLabels((y.length + 1) * vertOuter)}</g>\n//         }\n//         {leftY &&\n//           <g className=\"left_y-axis__nodes\">{yAxisNodes(0)}</g>\n//         }\n//         {leftY && showLabels &&\n//           <g className=\"top_x-axis__labels\">{yAxisLabels(0)}</g>\n//         }\n//         {rightY &&\n//           <g className=\"right_y-axis__nodes\">{yAxisNodes(x.length * horiOuter)}</g>\n//         }\n//         {rightY && showLabels &&\n//           <g className=\"top_x-axis__labels\">{yAxisLabels((x.length + 1) * horiOuter)}</g>\n//         }\n//         <g className=\"results__nodes\">{results}</g>\n//       </g>\n//     </svg>\n//   );\n// }\n","// third party\nimport React, {\n  useState, useEffect, useLayoutEffect, useMemo, cloneElement\n} from 'react';\nimport { useQueryParam, NumberParam, StringParam, BooleanParam } from 'use-query-params';\nimport Modal from 'react-modal';\n// import { Graph } from 'react-d3-graph';\n// import { Graph, DefaultLink, DefaultNode } from '@vx/network';\nimport {\n  InteractiveForceGraph, ForceGraphNode, ForceGraphLink,ForceGraph\n} from 'react-vis-force';\n// import { scaleCategory20 } from 'd3-scale';\nimport cx from 'classnames/bind';\nimport * as R from 'ramda';\nimport * as S from 'sanctuary';\nimport * as Centrality from 'ngraph.centrality';\nimport * as NGraph from 'ngraph.graph';\nimport * as d3 from 'd3';\n\n// fundamentals\nimport { objFromAry } from './util';\nimport { graphConfig } from './config';\nimport {\n  keys, isChampion, Champion, id,\n  Synergy, SynergyMap, SynergyTypeMap, SynergyType,\n  Item,\n} from './knowledge/modeldata';\nimport {\n  State, pickStateVars, mergeStateVars,\n  SynergyThreshold, Threshold, SynergyEnrichment,\n  ItemEnrichment, ChampionEnrichment,\n  useAppState,\n} from './knowledge/modelapp';\n\n// loaders\nimport {\n  mapToReactD3Graph, mapToVxNetwork, mapToReactVisForce,\n  mapReactVisForceToNGraph,\n} from './loader/mapsToGraph';\nimport { jsonToMaps } from './loader/dataToMaps';\n\n// components\nimport { ChampionList } from './components/ChampionList';\nimport { SynergyList } from './components/SynergyList';\nimport { ChampionImages } from './components/ChampionImages';\nimport { GridNode, GridChartHtml } from './components/GridChart';\n\n// utility types\nimport { NGraphGraph, CentralityMode } from './types/ngraph';\n\n// styles\nimport './App.scss';\nimport './components/GridChart.scss';\n\n// data\n// TODO: maybe consolidate into 1 data import?\nimport * as championModule from './data/champions.json';\nimport * as synergyModule from './data/synergies.json';\nimport * as itemModule from './data/items.json';\nimport * as metaModule from './data/meta.json';\n\n\ndeclare global {\n  interface Window {\n    champions: any;\n    keyToMap: any; // todo rename to relationToMap\n    tierToMap: any;\n    // valToKey: any;\n    idToChampion: any;\n    idToItem: any;\n    useChampion: any;\n    synergies: any;\n    keyToSynergy: any;\n    selected: any;\n    nodes: any;\n    links: any;\n    combineItems: any;\n    recipeToNonBasicItem: any;\n    idToResultsGridNode: any;\n    Centrality: any;\n    NGraph: any;\n    ngraph: any;\n    R: any;\n    S: any;\n    d3: any;\n    domainColors: any;\n    analysis: any;\n  }\n}\ndeclare module 'react' {\n  interface HTMLAttributes<T> extends AriaAttributes, DOMAttributes<T> {\n    // extends React's HTMLAttributes\n    active?: string|boolean|number;\n  }\n}\nwindow.R = R;\nwindow.S = S;\nwindow.d3 = d3;\n\n\ntype EnrichedSynergy = Synergy & SynergyEnrichment;\ntype EnrichedItem = Item & ItemEnrichment<EnrichedItem>;\ntype ChampionState = State & Champion & ChampionEnrichment;\n\nconst centralityModes: CentralityMode[] = ['eccentricity', 'degree', 'closeness', 'betweenness'];\nconst graphColors = d3.scaleSequential(d3.interpolateTurbo);\n\ninterface ItemMap {\n  [id: string]: Item;\n}\ninterface EnrichedItemMap {\n  [id: string]: EnrichedItem;\n}\ninterface EnrichedItemsMap {\n  [id: string]: EnrichedItemsMap;\n}\n\ninterface MetaConfig {\n  patch: string;\n  patch_links: string[];\n}\n\n// DATA\nconst rawChampionData = Object.values((championModule as any).default) as Champion[];\nconst synergyData = (synergyModule as any).default as SynergyTypeMap<Synergy>;\nconst itemData = (itemModule as any).default as ItemMap;\nconst metaConfig = (metaModule as any).default as MetaConfig;\n\nconst championData: (Champion & ChampionEnrichment)[] = rawChampionData.map(c => ({\n  ...c,\n  short: c[id].replace(/[\\W]/g,'').toLowerCase(),\n}));\n\n// synergy maps\nconst keyToSynergy: SynergyTypeMap<EnrichedSynergy> = R.mapObjIndexed(\n  R.mapObjIndexed(enrichSynergy),\n  synergyData,\n);\nwindow.keyToSynergy = keyToSynergy;\n\n// item maps creation, should be \"atomic\"\nconst idToItem: EnrichedItemMap = R.mapObjIndexed(prepItem, itemData);\nwindow.idToItem = idToItem;\nconst items = Object.values(idToItem);\nconst basicItems = items.filter(item => !item.recipe);\nconst nonBasicItems = items.filter(item => item.recipe);\nconst idToNonBasicItem  = objFromAry(id, nonBasicItems);\nconst recipeToNonBasicItem = R.mergeWith(\n  R.merge,\n  R.mapObjIndexed(\n    R.reduceBy(R.merge, {}, item => item.recipe[1]),\n    R.groupBy(item => item.recipe[0], nonBasicItems),\n  ),\n  R.mapObjIndexed(\n    R.reduceBy(R.merge, {}, item => item.recipe[0]),\n    R.groupBy(item => item.recipe[1], nonBasicItems),\n  ),\n);\nwindow.recipeToNonBasicItem = recipeToNonBasicItem;\nR.mapObjIndexed(stimulateItem, idToItem); // Fills in enriched items\n\n// Create \"empty\" enriched item from item\nfunction prepItem(item: Item, name: string): EnrichedItem {\n  return { ...item, usedIn: [], madeFrom: [] };\n}\n// Mutate enriched item to add its specifications\nfunction stimulateItem(item: EnrichedItem, unused: string, idToItem: EnrichedItemMap) {\n  if (!item.recipe) return;\n  item.madeFrom = item.recipe.map(itemName => idToItem[itemName]);\n  item.madeFrom.forEach(m => m.usedIn = [...m.usedIn, item]);\n}\n\n// LOADS ITEM TO GRIDCHART\nfunction makeGridNodeFromItem(item: Item): GridNode {\n  const {[id]: name, short, effect, icon} = item;\n\n  const node: GridNode = {id: name, data: effect};\n\n  if (name.length > 9 && short) {\n    node.label = short;\n  }\n\n  // todo abstract node-data creation to gridchart\n  if (icon) {\n    node.element = (\n      <div className=\"node-data\" title={name}>\n        <img src={icon} />\n        {node.data}\n      </div>\n    );\n  }\n\n  return node;\n}\ninterface GridNodeMap {\n  [id: string]: GridNode;\n}\nconst gridAxisNodes: GridNode[] = basicItems.map(makeGridNodeFromItem);\nconst idToResultsGridNode: GridNodeMap =\n  R.mapObjIndexed(makeGridNodeFromItem, idToNonBasicItem);\nwindow.idToResultsGridNode = idToResultsGridNode;\nfunction combineItems(itemA: GridNode, itemB: GridNode) {\n  return idToResultsGridNode[recipeToNonBasicItem[itemA.id][itemB.id][id]];\n}\nwindow.combineItems = combineItems;\n\ninterface ThresholdMap {\n  [threshold: number]: string;\n}\n\nfunction synergyThreshold(\n  posThreshMap: ThresholdMap, exactThreshMap: ThresholdMap, count: number\n): Threshold {\n  if (exactThreshMap[-count]) {\n    return [-count, exactThreshMap[-count]]; // return exacts\n  }\n\n  const sortedThresh = R.toPairs(posThreshMap); // should be sorted\n  const isThresholdLte = (acc, thresh: Threshold) => R.lte(thresh[0], count);\n  const reducedVal = (acc, val) => val;\n  return R.reduceWhile(isThresholdLte, reducedVal, null, sortedThresh);\n}\n\nfunction isKeyPositive(val, key) {\n  return Number(key) > 0;\n}\n\nfunction isKeyNegative(val, key) {\n  return Number(key) < 0;\n}\n\nfunction enrichSynergy(synergy: Synergy, name: string): EnrichedSynergy {\n  const posThreshMap: ThresholdMap = R.pickBy(isKeyPositive, synergy);\n  const negThreshMap: ThresholdMap = R.pickBy(isKeyNegative, synergy);\n  const getThresholdStr = R.curry(synergyThreshold)(posThreshMap, negThreshMap);\n  // add threshold\n  return {\n    ...synergy,\n    name,\n    threshes: R.concat(R.toPairs(negThreshMap), R.toPairs(posThreshMap)),\n    getThresholdStr,\n  };\n}\n\n// CHAMPION DATA\nconst pickReducer = (acc, val) => {\n  val.selected && acc.selected.push(val);\n  val.highlighted && acc.highlighted.push(val);\n  val.hovered && acc.hovered.push(val);\n  return acc;\n}\nconst reduceToPicks = R.reduce(pickReducer);\nfunction setChampionData(data) {\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const champions: ChampionState[] = data.map(c => useAppState(c, c.short));\n  const idToChampion: { [id:string]: ChampionState } = objFromAry(id, champions);\n  const keyToMap = jsonToMaps(id, keys, champions);\n  const tierToMap = jsonToMaps(id, ['tier'], champions);\n\n  // gathers selected, highlighted, hovered\n  const emptyPicks = { selected: [], highlighted: [], hovered: [] };\n  const picks = reduceToPicks(emptyPicks, champions);\n\n  window.champions = champions;\n  window.idToChampion = idToChampion;\n  window.keyToMap = keyToMap;\n  window.tierToMap = tierToMap;\n\n  return { keyToMap, tierToMap, idToChampion, champions, ...picks };\n}\n\nfunction useConfig(graphConfig) {\n  const [config, setConfig] = useState(graphConfig);\n\n  const ConfigEditor = (\n    <div id=\"config-editor\">\n    </div>\n  );\n\n  return [config, ConfigEditor];\n}\n\n// CHECKBOX FUNCTIONS\n// all keys must exist to be considered a leaf\nfunction isLeaf(obj): obj is ChampionState {\n  return isChampion(obj);\n}\n\n// walk an js object tree\nfunction walkLeaves(cb, isLeaf, tree) {\n  if (isLeaf(tree)) {\n    cb(tree);\n  } else if (typeof tree !== 'object') {\n    // do nothing\n  } else {\n    Object.values(tree).forEach(child => walkLeaves(cb, isLeaf, child));\n  }\n}\n\nfunction LabeledCheckbox({label, checked, onChange, className, children = []}) {\n  return (\n    <div className={className}>\n      <div className=\"labeledinput\">\n        <input\n          id={label}\n          type=\"checkbox\"\n          value={label}\n          checked={checked}\n          onChange={onChange}\n        />\n        <label htmlFor={label}>{label}</label>\n      </div>\n      {children}\n    </div>\n  );\n}\n\ninterface RenderMapAsCheckboxes {\n  render: React.ReactElement;\n  checked: boolean;\n}\n// return render: list of inputs\nfunction renderMapAsCheckboxes(name, map, depth=0): RenderMapAsCheckboxes {\n  function mapCheckboxOnChange(e) {\n    const { value, checked } = e.target;\n    walkLeaves(champion => champion.setFiltered(!checked), isLeaf, map[value]);\n  }\n\n  const { render, checked } = Object.entries(map[name]).reduce((acc, [k, v]) => {\n    if (isLeaf(v)) {\n      // acc.render.push(renderObjAsCheckbox(v));\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      // acc.render.push(v.render);\n      acc.render.push(\n        <LabeledCheckbox\n          key={v.name}\n          label={v.name}\n          checked={!v.filtered}\n          onChange={e => v.setFiltered(!e.target.checked)}\n          className=\"champion\"\n        />\n      );\n      acc.checked = acc.checked && !v.filtered;\n    } else {\n      const { render, checked } = renderMapAsCheckboxes(k, map[name], depth+1);\n      acc.render.push(render);\n      acc.checked = acc.checked && checked;\n    }\n    return acc;\n  }, { render: [], checked: true });\n\n  return {\n    render: (\n      <LabeledCheckbox\n        key={name}\n        label={name}\n        checked={checked}\n        onChange={mapCheckboxOnChange}\n        className={['checkboxes-container', `depth${depth}`].join(' ')}\n      >\n        {render}\n      </LabeledCheckbox>\n    ),\n    checked,\n  };\n}\n\n// ITEM MODAL\ninterface ItemReferenceModalProps {\n  basicItems: GridNode[];\n  combineItems: (a: GridNode, b: GridNode) => GridNode;\n}\nfunction ItemReferenceModal(props: ItemReferenceModalProps) {\n  const {basicItems, combineItems} = props;\n  const [open, setOpen] = React.useState(false);\n\n  function openModal() {\n    setOpen(true);\n  }\n  function closeModal() {\n    setOpen(false);\n  }\n\n  const style = {\n    content: {\n      top: 'unset',\n      left: '50%',\n      right: 'unset',\n      bottom: 'unset',\n      padding: 'unset',\n      transform: 'translate(-50%, 0)',\n      border: 'unset',\n    }\n  };\n\n  const nodeStyle = {\n  };\n  const chartStyle = {\n  };\n\n  const renderChart = (\n    <GridChartHtml\n      x={basicItems}\n      y={basicItems}\n      vertSpace={Math.floor(window.innerHeight * .98 / (basicItems.length + 1)) - 20}\n      horiSpace={Math.floor(window.innerWidth * .98 / (basicItems.length + 1)) - 4}\n      vertGutter={20}\n      horiGutter={4}\n      operator={combineItems}\n      showLabels\n      labelClass={\"grid-labels\"}\n      nodeStyle={nodeStyle}\n      chartStyle={chartStyle}\n    />\n  );\n\n  return (\n    <div className=\"reference-modal\">\n      <button className=\"panel\" onClick={openModal}>Item Reference</button>\n      <Modal\n        isOpen={open}\n        onRequestClose={closeModal}\n        style={style}\n        ariaHideApp={false}\n      >\n        <div id=\"item-grid\">\n          {renderChart}\n        </div>\n      </Modal>\n    </div>\n  )\n}\n\n// creates check boxes with objects at leaves, based on a maps of props vals -> objs\nfunction renderKeysAsCheckboxes(keyToMap, name='filters') {\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const [hidden, setHidden] = useState(true);\n\n  function toggleHidden() {\n    setHidden(!hidden);\n  }\n  const checkboxes = Object.entries(keyToMap).map(([key, valMap]) => {\n    const { render, checked } = renderMapAsCheckboxes(key, keyToMap);\n    return render;\n  });\n\n  return (\n    <div className=\"checkboxes\" is={!hidden ? 'active' : null}>\n      <button className=\"checkboxes-toggle panel\" onClick={toggleHidden}>\n        {name}\n      </button>\n      <div className=\"checkboxes-container panel\" hidden={hidden}>\n        {checkboxes}\n      </div>\n    </div>\n  );\n}\n\nconst filterNull = R.filter(R.identity);\n// Evaluates the thresholds that arise from a set of champions\nfunction evalChampionThresholds(champions: Champion[]): SynergyThreshold[] {\n  return Object.entries(keyToSynergy).flatMap(([k, synergyMap]) => {\n    const synergies = champions.flatMap(c => c[k]);\n    const synergyCountMap = R.countBy(R.identity, synergies);\n    const mapCountsToThresholds = R.map(([synName, synCount]) => {\n      const foundThresh = synergyMap[synName].getThresholdStr(synCount);\n      if (!foundThresh) return;\n      return {name: synName, threshes: [foundThresh]};\n    });\n    return filterNull(mapCountsToThresholds(R.toPairs(synergyCountMap)));\n  });\n}\nfunction extractSynergyThresholds(champion: Champion): SynergyThreshold[] {\n  const keySyns = R.toPairs(R.pick(keys, champion));\n  const keySynPaths = R.uniq(R.unnest(R.map(([k,vs]) => R.map(v => [k, v], vs), keySyns)))\n  return keySynPaths.map(path => R.path(path, keyToSynergy));\n}\n\nfunction linkDisplayRules(a: State, b: State): Partial<State> {\n  return {\n    filtered: a.filtered || b.filtered,\n    selected: a.selected && b.selected,\n    grouped: a.grouped && b.grouped,\n    highlighted: (a.highlighted && b.hovered) || (a.hovered && b.highlighted),\n    hovered: false,\n  };\n}\n\ninterface ExclusiveOptionsProps {\n  className?: string;\n  title: string;\n  options: string[];\n  selected: string;\n  onClick: (op: string) => void;\n}\nfunction ExclusiveOptions(props: ExclusiveOptionsProps) {\n   const {options, title, onClick, className, selected} = props;\n\n  const renderOptions = options.map(op => (\n    <div\n      key={op}\n      className={cx('option', {selected: op === selected})}\n      onClick={() => onClick(op)}\n    >\n      {op}\n    </div>\n  ));\n\n  return (\n    <div className={cx('exclusive-options', className)}>\n      <div className=\"title\">{title}</div>\n      <div className=\"options\">{renderOptions}</div>\n    </div>\n  )\n}\n\ninterface NodeAnalysis {\n  [node: string]: number;\n}\nfunction applyCentrality<T extends {id: string}>(\n  links, nodes: T[], mode: CentralityMode,\n): T[] {\n  const graph = mapReactVisForceToNGraph(links); // todo: add filter to links\n  window.ngraph = graph;\n  if (mode === 'eccentricity') {\n    const analysis: NodeAnalysis = Centrality.eccentricity(graph);\n    const aValues = Object.values(analysis);\n    const max = Math.max(...aValues);\n    const min = Math.min(...aValues);\n    const domainColors = graphColors.domain([max, min]); // lower the better\n    window.domainColors = domainColors;\n    window.analysis = analysis;\n    return nodes.map(n => R.merge(n, {style: {stroke: domainColors(analysis[n.id])}}));\n  } else if (mode === 'degree') {\n    const analysis: NodeAnalysis = Centrality.degree(graph);\n    const aValues = Object.values(analysis);\n    const max = Math.max(...aValues);\n    const min = Math.min(...aValues);\n    const domainColors = graphColors.domain([min, max]); // higher the better\n    window.domainColors = domainColors;\n    window.analysis = analysis;\n    return nodes.map(n => R.merge(n, {style: {stroke: domainColors(analysis[n.id])}}));\n  } else if (mode === 'closeness') {\n    const analysis: NodeAnalysis = Centrality.closeness(graph);\n    const aValues = Object.values(analysis);\n    const max = Math.max(...aValues);\n    const min = Math.min(...aValues);\n    const domainColors = graphColors.domain([min, max]); // higher the better\n    window.domainColors = domainColors;\n    window.analysis = analysis;\n    return nodes.map(n => R.merge(n, {style: {stroke: domainColors(analysis[n.id])}}));\n  } else if (mode === 'betweenness') {\n    const analysis: NodeAnalysis = Centrality.betweenness(graph);\n    const aValues = Object.values(analysis);\n    const max = Math.max(...aValues);\n    const min = Math.min(...aValues);\n    const domainColors = graphColors.domain([max, min]); // higher the better\n    window.domainColors = domainColors;\n    window.analysis = analysis;\n    return nodes.map(n => R.merge(n, {style: {stroke: domainColors(analysis[n.id])}}));\n  }\n  return nodes; // todo: throw?\n}\n\nfunction Ariandel() {\n  const start = Date.now();\n  // const [config, ConfigEditor] = useConfig(graphConfig);\n\n  const {\n    champions, keyToMap, tierToMap, idToChampion, selected, highlighted, hovered\n  } = setChampionData(championData);\n  const [hoveredChampion] = hovered;\n\n  const [centralityMode, setCentralityMode] = useState<CentralityMode|null>(null);\n\n  function toggleSelectChampion(id: string) {\n    const champion = idToChampion[id];\n    if (champion.filtered) {\n      champion.setSelected(false);\n      return;\n    };\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    champion.setSelected(!champion.selected);\n  }\n\n  function setOrToggleCentrality(op: CentralityMode) {\n    if (op === centralityMode) {\n      setCentralityMode(null);\n    } else {\n      setCentralityMode(op);\n    }\n  }\n\n  function relatedChampions(sourceC: ChampionState): ChampionState[] {\n    return R.uniqBy((c: ChampionState) => c[id], keys.flatMap(\n      key => sourceC[key].flatMap(\n        (syn: string) => Object.values(keyToMap[key][syn])\n      )\n    ).filter(c => c[id] !== sourceC[id]));\n  }\n\n  function setChampionHighlight(id: string, bool: boolean) {\n    const champion: ChampionState = idToChampion[id];\n    if (champion.filtered) return;\n    relatedChampions(champion).forEach(c => c.setHighlighted(bool));\n    champion.setHovered(bool);\n  }\n\n  function attachNodeEvents(node) {\n    return cloneElement(node, {\n      onMouseDown: () => toggleSelectChampion(node.props.node.id),\n      onMouseOver: () => setChampionHighlight(node.props.node.id, true),\n      onMouseOut: () => setChampionHighlight(node.props.node.id, false),\n    });\n  }\n\n  const {nodes, links} = mapToReactVisForce(\n    id, champions, Object.values(keyToMap), pickStateVars, linkDisplayRules);\n  window.nodes = nodes;\n  window.links = links;\n  const maybeMode = centralityMode ? S.Just(centralityMode) : S.Maybe.Nothing;\n  const maybeAnalyzedNodes = R.map(mode => applyCentrality(links, nodes, mode), maybeMode);\n  const renderedNodes = R.map(R.pipe(\n    forceNode => (<ForceGraphNode key={forceNode.node.id} {...forceNode} />),\n    attachNodeEvents,\n  ), S.fromMaybe(nodes)(maybeAnalyzedNodes));\n\n  // Benchmarking\n  process.env.NODE_ENV !== 'production' && console.log('ARIANDEL RENDER', Date.now() - start);\n  // TODO turn left/right-container to be real presentation components\n  return (\n    <div className=\"app\">\n      <div className=\"left-container\">\n        {renderKeysAsCheckboxes(tierToMap, 'tier')}\n        {renderKeysAsCheckboxes(R.pick(['origin'], keyToMap), 'origin')}\n        {renderKeysAsCheckboxes(R.pick(['class'], keyToMap), 'class')}\n        <ExclusiveOptions\n          className=\"panel\"\n          title=\"apply centrality\"\n          options={centralityModes}\n          selected={centralityMode}\n          onClick={setOrToggleCentrality}\n        />\n      </div>\n      <div className=\"right-container\">\n        <ChampionList\n          className=\"panel selected-champions\"\n          title=\"Selected\"\n          champions={selected}\n          onClick={toggleSelectChampion}\n        />\n        <SynergyList\n          className=\"panel selected-synergies\"\n          title=\"Synergies\"\n          synThreshes={evalChampionThresholds(selected)}\n        />\n      </div>\n      <div className=\"right-container offset1\">\n        <ChampionList\n          className=\"panel highlighted-champions\"\n          title=\"Neighbors\"\n          champions={highlighted}\n        />\n         <SynergyList\n          className=\"panel hovered-synergies\"\n          title={hoveredChampion ? hoveredChampion[id] : 'No Champion'}\n          synThreshes={extractSynergyThresholds(hoveredChampion || [])}\n        />\n      </div>\n      <div className=\"top-container\">\n        <ItemReferenceModal\n          basicItems={gridAxisNodes}\n          combineItems={combineItems}\n        />\n      </div>\n      <div id=\"graph\" className={cx({analyze: S.isJust(maybeAnalyzedNodes)})}>\n        <ForceGraph\n          // highlightDependencies\n          showLabels\n          zoom\n          zoomOptions={{\n            maxScale: 1,\n            minScale: 1,\n          }}\n          simulationOptions={{\n            radiusMargin: 36,\n            // strength: { x: -.04, y: -.01 },\n            // animate: true,\n            alphaDecay: .003, // lower the more grouped\n            height: window.innerHeight,\n            width: window.innerWidth,\n          }}\n        >\n          {renderedNodes}\n          {links.map(forceLink => (\n            <ForceGraphLink\n              key={`${forceLink.link.source}=>${forceLink.link.target}`}\n              {...forceLink}\n            />\n          ))}\n          <defs>\n            <ChampionImages champions={champions} />\n          </defs>\n        </ForceGraph>\n      </div>\n      <div className=\"bottom-container\">\n        patch: {metaConfig.patch}\n      </div>\n    </div>\n  );\n}\n\nexport default Ariandel;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\n// import Anor from './Anor';\n// import Astoria from './Astoria';\nimport Ariandel from './Ariandel';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Ariandel />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// Data replicas in js\n\n// object keys properties\nexport const keys: SynergyType[] = ['class', 'origin'];\n\n// unique object property\nexport type Identity = 'name';\nexport const id: Identity = 'name';\nexport interface Identifiable {\n  name: string;\n}\n\n// champion interface (using object keys and object props)\nexport interface Champion {\n  class: string[];\n  origin: string[];\n  name: string;\n  cost: number;\n  icon: string;\n}\n\nexport const isChampion = o => {\n  return keys.reduce((acc, key) => acc && Boolean(o[key]), true);\n};\n\n/* this whole section is bad */\nexport const classstrs = [\n  'assassin', 'blademaster', 'brawler', 'elementalist','guardian',\n  'gunslinger', 'knight', 'ranger', 'shapeshifter', 'sorcerer'\n].join('|');\n\nexport const originstrs = [\n  'demon', 'dragon', 'exile', 'glacial', 'hextech', 'imperial', 'ninja',\n  'robot', 'pirate', 'phantom', 'noble', 'void', 'wild', 'yordle'\n].join('|');\n\nexport const datatype = {\n  name: '',\n  class: [classstrs],\n  origin: [originstrs],\n  iconSrc: '',\n};\n\nexport type SynergyType = 'class' | 'origin';\n/* end bad sectiong */\n\n// map of synergy name to synergy data\nexport interface SynergyMap {\n  [synergy: string]: Synergy;\n}\n\nexport interface SynergyTypeMap<T> {\n  [synergyType: string]: {\n    [synergy: string]: T;\n  }\n}\n\nexport interface Synergy {\n  passive?: string;\n  [threshold: number]: string;\n}\n\nexport interface Item {\n  name: string,\n  short?: string,\n  recipe?: string[],\n  effect: string,\n  icon?: string,\n}\n\n// checks for module exports for node\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = {\n    keys,\n    id,\n    isChampion,\n    classstrs,\n    originstrs,\n    datatype,\n  };\n}"],"sourceRoot":""}